@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }<form class="mozaicForm" method="post" enctype = "multipart/form-data"><div id="uic_breadcrumb0" name="breadcrumb0" class="uic breadcrumb-navigation breadcrumb-navigation" style="left: 60px; top: 20px; width: 600px; height: 55px; "><div class="app-icon fa @ViewData["appIcon"]"></div><div class="nav-text">@ViewData["appName"] &gt; @ViewData["pageName"]</div></div><div id="uic_Order_per_header" name="Order_per_header"  class="uic form-heading" contentTemplate="" style="left: 60px; top: 80px; width: 144px; height: 40px; ">@Html.Raw(ViewData.ContainsKey("inputData_Order_per_header") ? "Objednávka periodik knihovnou".Replace("{var1}", ViewData["inputData_Order_per_header"].ToString()) : "Objednávka periodik knihovnou" )</div><div id="uic_Order_per_name" name="Order_per_name"  class="uic control-label" contentTemplate="" style="left: 60px; top: 160px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Order_per_name") ? "Periodikum".Replace("{var1}", ViewData["inputData_Order_per_name"].ToString()) : "Periodikum" )</div><div id="uic_Freq_per_label" name="Freq_per_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 200px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Freq_per_label") ? "Četnost periodika".Replace("{var1}", ViewData["inputData_Freq_per_label"].ToString()) : "Četnost periodika" )</div><select id="uic_periodical_dropdown" name="periodical_dropdown"  class="uic dropdown-select" tabindex="" style="left: 280px; top: 160px; width: 220px; height: 19px; ">@{ if(ViewData["dropdownData_periodical_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_periodical_dropdown"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_periodical_dropdown") && ViewData["dropdownSelection_periodical_dropdown"] is int && (int)ViewData["dropdownSelection_periodical_dropdown"] == option.Key ? "selected" : "") >@(option.Value)</option>}; } }</select><select id="uic_interval_dropdown" name="interval_dropdown"  class="uic dropdown-select" tabindex="" style="left: 280px; top: 200px; width: 220px; height: 19px; ">@{ if(ViewData["dropdownData_interval_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_interval_dropdown"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_interval_dropdown") && ViewData["dropdownSelection_interval_dropdown"] is int && (int)ViewData["dropdownSelection_interval_dropdown"] == option.Key ? "selected" : "") >@(option.Value)</option>}; } }</select><div id="uic_Form_per_label" name="Form_per_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 240px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Form_per_label") ? "Forma periodika".Replace("{var1}", ViewData["inputData_Form_per_label"].ToString()) : "Forma periodika" )</div><select id="uic_form_dropdown" name="form_dropdown"  class="uic dropdown-select" tabindex="" style="left: 280px; top: 240px; width: 220px; height: 19px; ">@{ if(ViewData["dropdownData_form_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_form_dropdown"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_form_dropdown") && ViewData["dropdownSelection_form_dropdown"] is int && (int)ViewData["dropdownSelection_form_dropdown"] == option.Key ? "selected" : "") >@(option.Value)</option>}; } }</select><div id="uic_Type_per_label" name="Type_per_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 280px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Type_per_label") ? "Typ periodika".Replace("{var1}", ViewData["inputData_Type_per_label"].ToString()) : "Typ periodika" )</div><select id="uic_type_dropdown" name="type_dropdown"  class="uic dropdown-select" tabindex="" style="left: 280px; top: 280px; width: 220px; height: 19px; ">@{ if(ViewData["dropdownData_type_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_type_dropdown"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_type_dropdown") && ViewData["dropdownSelection_type_dropdown"] is int && (int)ViewData["dropdownSelection_type_dropdown"] == option.Key ? "selected" : "") >@(option.Value)</option>}; } }</select><div id="uic_Start_per_label" name="Start_per_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 320px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Start_per_label") ? "Počátek objednávky".Replace("{var1}", ViewData["inputData_Start_per_label"].ToString()) : "Počátek objednávky" )</div><div id="uic_End_per_label" name="End_per_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 360px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_End_per_label") ? "Konec objednávky".Replace("{var1}", ViewData["inputData_End_per_label"].ToString()) : "Konec objednávky" )</div><div id="uic_Adress_per_label" name="Adress_per_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 400px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Adress_per_label") ? "Dodací adresa / Email".Replace("{var1}", ViewData["inputData_Adress_per_label"].ToString()) : "Dodací adresa / Email" )</div><textarea id="uic_ship_to_textbox" name="ship_to_textbox"  placeholder="" tabindex="" class="uic input-multiline" style="left: 280px; top: 400px; width: 220px; height: 75px; ">@ViewData["inputData_ship_to_textbox"]</textarea><div id="uic_Pieces_per_label" name="Pieces_per_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 500px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Pieces_per_label") ? "Počet kusů".Replace("{var1}", ViewData["inputData_Pieces_per_label"].ToString()) : "Počet kusů" )</div><input id ="uic_item_count_textbox" name="item_count_textbox"  type="text" placeholder="" tabindex="" value="@(ViewData.ContainsKey("inputData_item_count_textbox") ? @ViewData["inputData_item_count_textbox"] : "")" class="uic input-single-line" style="left: 280px; top: 500px; width: 220px; height: 25px; "/><div id="uic_Note_per_label" name="Note_per_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 540px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Note_per_label") ? "Poznámka".Replace("{var1}", ViewData["inputData_Note_per_label"].ToString()) : "Poznámka" )</div><input id ="uic_note_textbox" name="note_textbox"  type="text" placeholder="" tabindex="" value="@(ViewData.ContainsKey("inputData_note_textbox") ? @ViewData["inputData_note_textbox"] : "")" class="uic input-single-line" style="left: 280px; top: 540px; width: 220px; height: 25px; "/><button id="uic_order_button" name="button" value="order_button"  class="uic button-simple button-large" buttonName="order_button" tabindex="" style="left: 280px; top: 600px; width: 199px; height: 31px;  ">Objednat</button><input id ="uic_begin_dtpicker" name="begin_dtpicker"  type="text" placeholder="" tabindex="" value="@(ViewData.ContainsKey("inputData_begin_dtpicker") ? @ViewData["inputData_begin_dtpicker"] : "")" class="uic input-single-line input-with-datepicker" style="left: 280px; top: 320px; width: 220px; height: 25px; "/><input id ="uic_end_dtpicker" name="end_dtpicker"  type="text" placeholder="" tabindex="" value="@(ViewData.ContainsKey("inputData_end_dtpicker") ? @ViewData["inputData_end_dtpicker"] : "")" class="uic input-single-line input-with-datepicker" style="left: 280px; top: 360px; width: 220px; height: 25px; "/><input type="hidden" name="registry" value="@ViewData["crossBlockRegistry"]" /></form>