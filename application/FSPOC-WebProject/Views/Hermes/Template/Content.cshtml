@using FSS.Omnius.Modules.Entitron.Entity.Hermes
@model FSS.Omnius.Modules.Entitron.Entity.Hermes.EmailTemplate
@{
    Layout = "~/Views/Shared/_PartialViewAjaxLayout.cshtml";
}

@if (!Model.Is_HTML)
{
    <link rel="stylesheet" href="~/Scripts/cm/lib/codemirror.css" />
    <link rel="stylesheet" href="~/Scripts/cm/addon/hint/show-hint.css">
    <script src="~/Scripts/cm/lib/codemirror.js"></script>
    <script src="~/Scripts/cm/addon/hint/show-hint.js"></script>
    <script src="~/Scripts/cm/addon/hint/xml-hint.js"></script>
    <script src="~/Scripts/cm/addon/hint/html-hint.js"></script>
    <script src="~/Scripts/cm/mode/xml/xml.js"></script>
    <script src="~/Scripts/cm/mode/javascript/javascript.js"></script>
    <script src="~/Scripts/cm/mode/css/css.js"></script>
    <script src="~/Scripts/cm/mode/htmlmixed/htmlmixed.js"></script>
}
else
{
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
}

@using (Html.BeginRouteForm("Hermes", new { @action = "SaveContent" }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Html.Raw(string.Format("Úprava obsahu e-mailu <em>{0}</em>", Model.Name))</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <div class="col-xs-12">
                <h5>Proměnné</h5>
                <ul class="placeholder-list">
                    @foreach (EmailPlaceholder p in Model.PlaceholderList.OrderBy(i => i.Num_Order))
                    {
                        <li title="@p.Description">{@p.Prop_Name}</li>
                    }
                </ul>
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-12">
                <h5>Obsah</h5>
                @Html.TextAreaFor(model => model.Name, new { @class = "form-control", @rows = 20 })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-12">
                <button type="submit" class="btn btn-omnius-blue">
                    <span class="fa fa-save"></span>&nbsp;&nbsp;
                    Uložit
                </button>
            </div>
        </div>
    </div>
}



@if (!Model.Is_HTML)
{
    <script type="text/javascript">
    /* <![CDATA[ */
        var cm;

        setTimeout(function() {
            var area = $('#Content');
            cm = CodeMirror.fromTextArea(area[0], {
                lineNumbers: true,
                mode: "htmlmixed",
                extraKeys: { "Ctrl-Space": "autocomplete" }
            });

            cm.on('blur', function () {
                cm.save();
            });
        }, 500);

        $('.placeholder-list li').click(function () {
            var placeholder = $(this).text();

            if (placeholder.match(/\{list\..+\}/)) {
                cm.replaceSelection(placeholder + "\r\n\r\n" + placeholder.replace(/\{/, '{end.'));
            }
            else {
                cm.replaceSelection(placeholder);
            }
        });
    /* ]]> */
    </script>
}
else
{
    <script type="text/javascript">
    /* <![CDATA[ */
        $(function () {
            var area = $('#Content');

            var editor = CKEDITOR.replace(area.attr('id'), {
                toolbarGroups : [
                    { name: 'document', groups: ['mode', 'document', 'doctools'] },
                    { name: 'clipboard', groups: ['clipboard', 'undo'] },
                    { name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing'] },
                    { name: 'forms', groups: ['forms'] },
                    { name: 'links', groups: ['links'] },
                    { name: 'insert', groups: ['insert'] },
                    { name: 'tools', groups: ['tools'] },
                    '/',
                    { name: 'styles', groups: ['styles'] },
                    { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },
                    { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph'] },
                    '/',
                    { name: 'colors', groups: ['colors'] },
                    { name: 'others', groups: ['others'] },
                    { name: 'about', groups: ['about'] }
                ],
                removeButtons : 'BGColor,TextColor,Styles,Iframe,PageBreak,Smiley,Flash,Anchor,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Templates,Print,Save,About'
            });

            $('.placeholder-list li').click(function () {
                var placeholder = $(this).text();

                if (placeholder.match(/\{list\..+\}/)) {
                    editor.insertHtml(placeholder + "<br><br>" + placeholder.replace(/\{/, '{end.'));
                }
                else {
                    editor.insertHtml(placeholder);
                }
            });
        });
    /* ]]> */
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}