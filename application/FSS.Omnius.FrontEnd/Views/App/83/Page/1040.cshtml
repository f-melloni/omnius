@using FSS.Omnius.FrontEnd.Utils@{T t = new T( (string)ViewData["locale"] );}@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }<form class="mozaicForm" method="post" enctype = "multipart/form-data"><div id="uic_panel0" name="panel0"  class="uic panel-component named-panel"  style="left: 20px; top: 20px; width: 900px; height: 520px;  "><div class="named-panel-header">@(t._("Editace auditu bez WF"))</div><div id="uic_label1" name="label1"  class="uic control-label" contentTemplate="" style="left: 20px; top: 60px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label1") ? "Společnost".Replace("{var1}", ViewData["inputData_label1"].ToString()) : "Společnost" )</div><select id="uic_company_dropdown" name="company_dropdown" tabindex="1"  class="uic dropdown-select" style="left: 160px; top: 60px; width: 260px; height: 20px; ">@{ if(ViewData["dropdownData_company_dropdown"] != null) { foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_company_dropdown"]).OrderBy(p => p.Value)){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_company_dropdown") && ViewData["dropdownSelection_company_dropdown"] is int && (int)ViewData["dropdownSelection_company_dropdown"] == option.Key ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><div id="uic_label2" name="label2"  class="uic control-label" contentTemplate="" style="left: 20px; top: 100px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label2") ? "Číslo auditu".Replace("{var1}", ViewData["inputData_label2"].ToString()) : "Číslo auditu" )</div><input id ="uic_audit_number_input" name="audit_number_input"  type="text" placeholder="@(t._(""))" tabindex="2" value="@(ViewData.ContainsKey("inputData_audit_number_input") ? @ViewData["inputData_audit_number_input"] : "")" class="uic input-single-line" style="left: 160px; top: 100px; width: 260px; height: 26px; "/><div id="uic_label4" name="label4"  class="uic control-label" contentTemplate="" style="left: 20px; top: 140px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label4") ? "Název auditu".Replace("{var1}", ViewData["inputData_label4"].ToString()) : "Název auditu" )</div><textarea id="uic_audit_title_multiline" name="audit_title_multiline"  placeholder="@(t._(""))" tabindex="3" class="uic input-multiline" style="left: 160px; top: 140px; width: 260px; height: 76px; ">@ViewData["inputData_audit_title_multiline"]</textarea><textarea id="uic_audit_title_en_multiline" name="audit_title_en_multiline"  placeholder="@(t._(""))" tabindex="4" class="uic input-multiline" style="left: 560px; top: 140px; width: 260px; height: 76px; ">@ViewData["inputData_audit_title_en_multiline"]</textarea><div id="uic_label5" name="label5"  class="uic control-label" contentTemplate="" style="left: 440px; top: 140px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label5") ? "Název auditu EN".Replace("{var1}", ViewData["inputData_label5"].ToString()) : "Název auditu EN" )</div><div id="uic_label6" name="label6"  class="uic control-label" contentTemplate="" style="left: 20px; top: 240px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label6") ? "Datum".Replace("{var1}", ViewData["inputData_label6"].ToString()) : "Datum" )</div><input id ="uic_audit_date_datepicker" name="audit_date_datepicker"  type="text" placeholder="@(t._(""))" tabindex="5" value="@(ViewData.ContainsKey("inputData_audit_date_datepicker") ? @ViewData["inputData_audit_date_datepicker"] : "")" class="uic input-single-line" style="left: 160px; top: 240px; width: 260px; height: 26px; "/><select id="uic_ia_auditor_dropdown" name="ia_auditor_dropdown" tabindex=""  class="uic dropdown-select" style="left: 160px; top: 280px; width: 260px; height: 20px; "><option value="-1">@(t._("-- vyberte osobu --"))</option>@{ if(ViewData["dropdownData_ia_auditor_dropdown"] != null) { foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_ia_auditor_dropdown"]).OrderBy(p => p.Value)){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_ia_auditor_dropdown") && ViewData["dropdownSelection_ia_auditor_dropdown"] is int && (int)ViewData["dropdownSelection_ia_auditor_dropdown"] == option.Key ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_ia_tg_auditor_dropdown" name="ia_tg_auditor_dropdown" tabindex="7"  class="uic dropdown-select" style="left: 160px; top: 320px; width: 260px; height: 20px; "><option value="-1">@(t._("-- vyberte osobu --"))</option>@{ if(ViewData["dropdownData_ia_tg_auditor_dropdown"] != null) { foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_ia_tg_auditor_dropdown"]).OrderBy(p => p.Value)){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_ia_tg_auditor_dropdown") && ViewData["dropdownSelection_ia_tg_auditor_dropdown"] is int && (int)ViewData["dropdownSelection_ia_tg_auditor_dropdown"] == option.Key ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><div id="uic_label11" name="label11"  class="uic control-label" contentTemplate="" style="left: 20px; top: 280px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label11") ? "Auditor".Replace("{var1}", ViewData["inputData_label11"].ToString()) : "Auditor" )</div><div id="uic_label10" name="label10"  class="uic control-label" contentTemplate="" style="left: 20px; top: 320px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label10") ? "Auditor IA TG".Replace("{var1}", ViewData["inputData_label10"].ToString()) : "Auditor IA TG" )</div><div id="uic_label12" name="label12"  class="uic control-label" contentTemplate="" style="left: 20px; top: 380px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label12") ? "Dokument CZ".Replace("{var1}", ViewData["inputData_label12"].ToString()) : "Dokument CZ" )</div><div id="uic_label13" name="label13"  class="uic control-label" contentTemplate="" style="left: 20px; top: 420px; width: 78px; height: 23px; ">@Html.Raw(ViewData.ContainsKey("inputData_label13") ? "Dokument EN".Replace("{var1}", ViewData["inputData_label13"].ToString()) : "Dokument EN" )</div><input id="uic_button-browse16" name="button-browse16" type="file" tabindex=""  class="uic button-browse" buttonName="button-browse16" style="left: 160px; top: 380px; width: 273px; height: 23px; ">@(t._(""))</input><input id="uic_button-browse17" name="button-browse17" type="file" tabindex=""  class="uic button-browse" buttonName="button-browse17" style="left: 160px; top: 420px; width: 273px; height: 23px; ">@(t._(""))</input><button id="uic_save_button" name="button" value="save_button"  class="uic button-simple button-large" buttonName="save_button" tabindex="" style="left: 560px; top: 460px; width: 260px; height: 31px;  ">@(t._("Uložit"))</button></div><div id="uic_panel_history" name="panel_history"  class="uic panel-component named-panel"  style="left: 20px; top: 855px; width: 900px; height: 265px;  "><div class="named-panel-header">@(t._("Historie"))</div>@{ if(ViewData.ContainsKey("tableData_dataTable_history") && ((System.Data.DataTable)(ViewData["tableData_dataTable_history"])).Rows.Count > 0) {<table id="uic_dataTable_history" name="dataTable_history" true  class="uic data-table display hideFirst" style="left: 20px; top: 40px; width: 852.5px; height: 143.5px; " uicWidth="852.5px"><thead><tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_dataTable_history"])).Columns) {<th data-column-name='@(col.ColumnName)'>@(t._(col.Caption))</th>}</tr></thead><tfoot><tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_dataTable_history"])).Columns) {<th>@(t._(col.Caption))</th>}</tr></tfoot><tbody>@foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_dataTable_history"])).Rows) {<tr>@foreach (var cell in row.ItemArray) {<td>@Html.Raw(t._(cell.ToString()))</td>}</tr>}</tbody></table>} else { <div class="uic control-label empty-table-label" style="left: 20px; top: 40px;">@t._("Tabulka neobsahuje žádná data")</div> } }<input type="hidden" name="dataTable_history" /></div><div id="uic_panel_soubory" name="panel_soubory"  class="uic panel-component named-panel"  style="left: 20px; top: 565px; width: 900px; height: 265px;  "><div class="named-panel-header">@(t._("Přiložené soubory"))</div>@{ if(ViewData.ContainsKey("tableData_grid_files") && ((System.Data.DataTable)(ViewData["tableData_grid_files"])).Rows.Count > 0) {<table id="uic_grid_files" name="grid_files" true  class="uic data-table data-table-with-actions display hideFirst" style="left: 20px; top: 45px; width: 850.5px; height: 143.5px; " uicWidth="850.5px"><thead><tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_grid_files"])).Columns) {<th>@(t._(col.Caption))</th>} <th>@(t._("Akce"))</th></tr></thead><tfoot><tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_grid_files"])).Columns) {<th>@(t._(col.Caption))</th>} <th>@(t._("Akce"))</th></tr></tfoot><tbody>@foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_grid_files"])).Rows) {<tr>@foreach (var cell in row.ItemArray) {<td>@t._(cell.ToString())</td>}<td class="actionIcons"><i title="@(t._("Stáhnout"))" class="fa fa-download rowEditAction"></i></td></tr>}</tbody></table>} else { <div class="uic control-label empty-table-label" style="left: 20px; top: 45px;">@t._("Tabulka neobsahuje žádná data")</div> } }<input type="hidden" name="grid_files" /></div><input type="hidden" name="registry" value="@ViewData["crossBlockRegistry"]" />@Html.AntiForgeryToken()</form>