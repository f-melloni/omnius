@using FSS.Omnius.FrontEnd.Utils@{T t = new T( (string)ViewData["locale"] );}@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }<form class="mozaicForm" method="post" enctype = "multipart/form-data"><div id="uic_panel0" name="panel0"  class="uic panel-component named-panel"  style="left: 15px; top: 15px; width: 1050px; height: 400px;  "><div class="named-panel-header">@(t._("Změnit nadřízeného"))</div><div id="uic_user_label" name="user_label"  class="uic control-label" contentTemplate="" style="left: 300px; top: 55px; width: 77px; height: 17px; ">@Html.Raw(ViewData.ContainsKey("inputData_user_label") ? "{var1}".Replace("{var1}", ViewData["inputData_user_label"].ToString()) : "{var1}" )</div><select id="uic_dropdown_role" name="dropdown_role" tabindex=""  class="uic dropdown-select" style="left: 780px; top: 50px; width: 240px; height: 27px; ">@{ if(ViewData["dropdownData_dropdown_role"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_dropdown_role"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_dropdown_role") && ViewData["dropdownSelection_dropdown_role"] is int && (int)ViewData["dropdownSelection_dropdown_role"] == option.Key ? "selected" : "") >@(t._(option.Value))</option>}; } }</select>@{ if(ViewData.ContainsKey("tableData_table-assigned-roles") && ((System.Data.DataTable)(ViewData["tableData_table-assigned-roles"])).Rows.Count > 0) {<table id="uic_table-assigned-roles" name="table-assigned-roles" true  class="uic data-table display hideFirst" style="left: 25px; top: 180px; width: 990.86666px; height: 143.86666px; " uicWidth="990.86666px"><thead><tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_table-assigned-roles"])).Columns) {<th data-column-name='@(col.ColumnName)'>@(t._(col.Caption))</th>}</tr></thead><tfoot><tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_table-assigned-roles"])).Columns) {<th>@(t._(col.Caption))</th>}</tr></tfoot><tbody>@foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_table-assigned-roles"])).Rows) {<tr>@foreach (var cell in row.ItemArray) {<td>@t._(cell.ToString())</td>}</tr>}</tbody></table>} else { <div class="uic control-label empty-table-label" style="left: 25px; top: 180px;">@t._("Tabulka neobsahuje žádná data")</div> } }<input type="hidden" name="table-assigned-roles" /><div id="uic_label3" name="label3"  class="uic control-label detail-label" contentTemplate="" style="left: 0px; top: 55px; width: 80px; height: 17px; ">@Html.Raw(ViewData.ContainsKey("inputData_label3") ? "Uživatel:".Replace("{var1}", ViewData["inputData_label3"].ToString()) : "Uživatel:" )</div><div id="uic_label4" name="label4"  class="uic control-label detail-label" contentTemplate="" style="left: 515px; top: 55px; width: 60px; height: 19px; ">@Html.Raw(ViewData.ContainsKey("inputData_label4") ? "Role:".Replace("{var1}", ViewData["inputData_label4"].ToString()) : "Role:" )</div></div><button id="uic_button_save" name="button" value="button_save"  class="uic button-simple button-large" buttonName="button_save" tabindex="" style="left: 835px; top: 125px; width: 203px; height: 33px;  ">@(t._("Přidat"))</button><button id="uic_button_backtolist" name="button" value="button_backtolist" ignoredonvalidation class="uic button-simple button-large" buttonName="button_backtolist" tabindex="" style="left: 595px; top: 125px; width: 197px; height: 33px;  ">@(t._("Zpět na seznam"))</button><input type="hidden" name="registry" value="@ViewData["crossBlockRegistry"]" />@Html.AntiForgeryToken()</form>