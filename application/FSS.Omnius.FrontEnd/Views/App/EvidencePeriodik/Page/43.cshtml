@using FSS.Omnius.FrontEnd.Utils@{T t = new T((FSS.Omnius.Modules.CORE.Locale)ViewData["locale"]);}@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }@{Dictionary<string, string> formState = (Dictionary<string, string>)ViewData["formState"]; }<form class="mozaicForm" method="post" enctype = "multipart/form-data"><div id="uic_breadcrumb0" name="breadcrumb0" class="uic breadcrumb-navigation breadcrumb-navigation" style="left: 60px; top: 20px; width: 600px; height: 55px; "><div class="app-icon fa @ViewData["appIcon"]"></div><div class="nav-text">@(t._(ViewData["appName"].ToString())) &gt; @(t._(ViewData["pageName"].ToString()))</div></div><button id="uic_save_button" name="button" value="save_button"  class="uic button-simple button-large" buttonName="save_button" tabindex="" style="left: 460px; top: 580px; width: 198px; height: 31px;  ">@(t._("Uložit"))</button><button id="uic_cancel_button" name="button" value="cancel_button"  class="uic button-simple button-large" buttonName="cancel_button" tabindex="" style="left: 240px; top: 580px; width: 198px; height: 31px;  ">@(t._("Zavřít"))</button><div id="uic_active_check" class="uic checkbox-control" tabindex="" style="left: 260px; top: 540px; width: 77px; height: 23px; "><input type="checkbox" name="active_check"@((formState.ContainsKey("active_check") && formState["active_check"] == "on") || (ViewData.ContainsKey("checkboxData_active_check") && (bool)ViewData["checkboxData_active_check"]) ? " checked" : "") /><span class="checkbox-label">@(t._("Aktivní"))</span></div><input id="uic_post_textbox" name="post_textbox"  class="uic input-single-line" style="left: 260px; top: 500px; width: 220px; height: 25px; "></input><input id="uic_price_20_textbox" name="price_20_textbox"  class="uic input-single-line" style="left: 260px; top: 460px; width: 220px; height: 25px; "></input><select id="uic_type_dropdown" name="type_dropdown" tabindex=""  class="uic dropdown-select" style="left: 260px; top: 340px; width: 97px; height: 20px; ">@{ if(ViewData["dropdownData_type_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_type_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("type_dropdown") && Convert.ToInt32(formState["type_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_type_dropdown") && ViewData["dropdownSelection_type_dropdown"] is int && (int)ViewData["dropdownSelection_type_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_form_dropdown" name="form_dropdown" tabindex=""  class="uic dropdown-select" style="left: 260px; top: 300px; width: 97px; height: 20px; ">@{ if(ViewData["dropdownData_form_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_form_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("form_dropdown") && Convert.ToInt32(formState["form_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_form_dropdown") && ViewData["dropdownSelection_form_dropdown"] is int && (int)ViewData["dropdownSelection_form_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_count_dropdown" name="count_dropdown" tabindex=""  class="uic dropdown-select" style="left: 260px; top: 260px; width: 97px; height: 20px; ">@{ if(ViewData["dropdownData_count_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_count_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("count_dropdown") && Convert.ToInt32(formState["count_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_count_dropdown") && ViewData["dropdownSelection_count_dropdown"] is int && (int)ViewData["dropdownSelection_count_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_supplier_dropdown" name="supplier_dropdown" tabindex=""  class="uic dropdown-select" style="left: 260px; top: 220px; width: 97px; height: 20px; ">@{ if(ViewData["dropdownData_supplier_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_supplier_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("supplier_dropdown") && Convert.ToInt32(formState["supplier_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_supplier_dropdown") && ViewData["dropdownSelection_supplier_dropdown"] is int && (int)ViewData["dropdownSelection_supplier_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><input id="uic_note_textbox" name="note_textbox"  class="uic input-single-line" style="left: 260px; top: 380px; width: 220px; height: 25px; "></input><input id="uic_price_textbox" name="price_textbox"  class="uic input-single-line" style="left: 260px; top: 420px; width: 220px; height: 25px; "></input><input id="uic_name_textbox" name="name_textbox"  class="uic input-single-line" style="left: 260px; top: 180px; width: 220px; height: 25px; "></input><div id="uic_post_label" name="post_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 500px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_post_label") ? "Poštovné".Replace("{var1}", (ViewData["inputData_post_label"] ?? "").ToString()) : t._("Poštovné") )</div><div id="uic_form_label" name="form_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 300px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_form_label") ? "Forma periodika".Replace("{var1}", (ViewData["inputData_form_label"] ?? "").ToString()) : t._("Forma periodika") )</div><div id="uic_cena_20_dph_label" name="cena_20_dph_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 460px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_cena_20_dph_label") ? "Orientační cena bez 20% DPH".Replace("{var1}", (ViewData["inputData_cena_20_dph_label"] ?? "").ToString()) : t._("Orientační cena bez 20% DPH") )</div><div id="uic_cena_dph_label" name="cena_dph_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 420px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_cena_dph_label") ? "Orientační cena s DPH".Replace("{var1}", (ViewData["inputData_cena_dph_label"] ?? "").ToString()) : t._("Orientační cena s DPH") )</div><div id="uic_note_label" name="note_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 380px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_note_label") ? "Poznámka".Replace("{var1}", (ViewData["inputData_note_label"] ?? "").ToString()) : t._("Poznámka") )</div><div id="uic_type_label" name="type_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 340px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_type_label") ? "Typ periodika".Replace("{var1}", (ViewData["inputData_type_label"] ?? "").ToString()) : t._("Typ periodika") )</div><div id="uic_count_label" name="count_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 260px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_count_label") ? "Četnost periodika".Replace("{var1}", (ViewData["inputData_count_label"] ?? "").ToString()) : t._("Četnost periodika") )</div><div id="uic_supplier" name="supplier"  class="uic control-label" contentTemplate="" style="left: 60px; top: 220px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_supplier") ? "Dodavatel".Replace("{var1}", (ViewData["inputData_supplier"] ?? "").ToString()) : t._("Dodavatel") )</div><div id="uic_name_label" name="name_label"  class="uic control-label" contentTemplate="" style="left: 60px; top: 180px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_name_label") ? "Název periodika".Replace("{var1}", (ViewData["inputData_name_label"] ?? "").ToString()) : t._("Název periodika") )</div><div id="uic_header_label" name="header_label"  class="uic form-heading" contentTemplate="" style="left: 60px; top: 100px; width: 146px; height: 40px; ">@Html.Raw(ViewData.ContainsKey("inputData_header_label") ? "Vytvoření položky periodika".Replace("{var1}", (ViewData["inputData_header_label"] ?? "").ToString()) : t._("Vytvoření položky periodika") )</div><input type="hidden" name="registry" value="@ViewData["crossBlockRegistry"]" />@Html.AntiForgeryToken()</form>