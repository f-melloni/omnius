@using FSS.Omnius.FrontEnd.Utils@{T t = new T((FSS.Omnius.Modules.CORE.Locale)ViewData["locale"]);}@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }@{Dictionary<string, string> formState = (Dictionary<string, string>)ViewData["formState"]; }<form class="mozaicForm" method="post" enctype = "multipart/form-data"><div id="uic_order_panel" name="order_panel"  class="uic panel-component visible-panel-pale-background"  panelClonedBy="add_order_button" style="left: 60px; top: 280px; width: 820px; height: 270px;  "><div id="uic_start_label" name="start_label"  class="uic control-label" contentTemplate="" style="left: 420px; top: 100px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_start_label") ? "Počátek objednávky".Replace("{var1}", (ViewData["inputData_start_label"] ?? "").ToString()) : t._("Počátek objednávky") )</div><div id="uic_end_label" name="end_label"  class="uic control-label" contentTemplate="" style="left: 420px; top: 140px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_end_label") ? "Konec objednávky".Replace("{var1}", (ViewData["inputData_end_label"] ?? "").ToString()) : t._("Konec objednávky") )</div><input id ="uic_start_dtpicker" name="start_dtpicker"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("start_dtpicker") ? formState["start_dtpicker"] : (ViewData.ContainsKey("inputData_start_dtpicker") ? @ViewData["inputData_start_dtpicker"] : ""))" class="uic input-single-line input-with-datepicker" style="left: 560px; top: 100px; width: 220px; height: 25px; "/><input id ="uic_end_dtpicker" name="end_dtpicker"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("end_dtpicker") ? formState["end_dtpicker"] : (ViewData.ContainsKey("inputData_end_dtpicker") ? @ViewData["inputData_end_dtpicker"] : ""))" class="uic input-single-line input-with-datepicker" style="left: 560px; top: 140px; width: 220px; height: 25px; "/><div id="uic_price_vat_10_label" name="price_vat_10_label"  class="uic control-label" contentTemplate="" style="left: 20px; top: 180px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_price_vat_10_label") ? "Cena bez DPH".Replace("{var1}", (ViewData["inputData_price_vat_10_label"] ?? "").ToString()) : t._("Cena bez DPH") )</div><div id="uic_pieces_label" name="pieces_label"  class="uic control-label" contentTemplate="" style="left: 420px; top: 20px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_pieces_label") ? "Počet kusů".Replace("{var1}", (ViewData["inputData_pieces_label"] ?? "").ToString()) : t._("Počet kusů") )</div><div id="uic_note_label" name="note_label"  class="uic control-label" contentTemplate="" style="left: 420px; top: 60px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_note_label") ? "Poznámka".Replace("{var1}", (ViewData["inputData_note_label"] ?? "").ToString()) : t._("Poznámka") )</div><div id="uic_type_label" name="type_label"  class="uic control-label" contentTemplate="" style="left: 20px; top: 140px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_type_label") ? "Typ".Replace("{var1}", (ViewData["inputData_type_label"] ?? "").ToString()) : t._("Typ") )</div><div id="uic_form_label" name="form_label"  class="uic control-label" contentTemplate="" style="left: 20px; top: 100px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_form_label") ? "Forma".Replace("{var1}", (ViewData["inputData_form_label"] ?? "").ToString()) : t._("Forma") )</div><div id="uic_interval_label" name="interval_label"  class="uic control-label" contentTemplate="" style="left: 20px; top: 60px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_interval_label") ? "Četnost".Replace("{var1}", (ViewData["inputData_interval_label"] ?? "").ToString()) : t._("Četnost") )</div><div id="uic_periodical_label" name="periodical_label"  class="uic control-label" contentTemplate="" style="left: 20px; top: 20px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_periodical_label") ? "Periodikum".Replace("{var1}", (ViewData["inputData_periodical_label"] ?? "").ToString()) : t._("Periodikum") )</div><select id="uic_periodical_dropdown" name="periodical_dropdown" tabindex=""  class="uic dropdown-select" style="left: 140px; top: 20px; width: 220px; height: 21px; ">@{ if(ViewData["dropdownData_periodical_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_periodical_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("periodical_dropdown") && Convert.ToInt32(formState["periodical_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_periodical_dropdown") && ViewData["dropdownSelection_periodical_dropdown"] is int && (int)ViewData["dropdownSelection_periodical_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_interval_dropdown" name="interval_dropdown" tabindex=""  class="uic dropdown-select" style="left: 140px; top: 60px; width: 220px; height: 21px; ">@{ if(ViewData["dropdownData_interval_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_interval_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("interval_dropdown") && Convert.ToInt32(formState["interval_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_interval_dropdown") && ViewData["dropdownSelection_interval_dropdown"] is int && (int)ViewData["dropdownSelection_interval_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_form_dropdown" name="form_dropdown" tabindex=""  class="uic dropdown-select" style="left: 140px; top: 100px; width: 220px; height: 21px; ">@{ if(ViewData["dropdownData_form_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_form_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("form_dropdown") && Convert.ToInt32(formState["form_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_form_dropdown") && ViewData["dropdownSelection_form_dropdown"] is int && (int)ViewData["dropdownSelection_form_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_type_dropdown" name="type_dropdown" tabindex=""  class="uic dropdown-select" style="left: 140px; top: 140px; width: 220px; height: 21px; ">@{ if(ViewData["dropdownData_type_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_type_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("type_dropdown") && Convert.ToInt32(formState["type_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_type_dropdown") && ViewData["dropdownSelection_type_dropdown"] is int && (int)ViewData["dropdownSelection_type_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><input id ="uic_note_textbox" name="note_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("note_textbox") ? formState["note_textbox"] : (ViewData.ContainsKey("inputData_note_textbox") ? @ViewData["inputData_note_textbox"] : ""))" class="uic input-single-line" style="left: 560px; top: 60px; width: 220px; height: 25px; "/><input id ="uic_pieces_textbox" name="pieces_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("pieces_textbox") ? formState["pieces_textbox"] : (ViewData.ContainsKey("inputData_pieces_textbox") ? @ViewData["inputData_pieces_textbox"] : ""))" class="uic input-single-line" style="left: 560px; top: 20px; width: 220px; height: 25px; "/><input id ="uic_prince_vat_10_textbox" name="prince_vat_10_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("prince_vat_10_textbox") ? formState["prince_vat_10_textbox"] : (ViewData.ContainsKey("inputData_prince_vat_10_textbox") ? @ViewData["inputData_prince_vat_10_textbox"] : ""))" class="uic input-single-line" style="left: 140px; top: 180px; width: 220px; height: 25px; " writeSumInto="@(t._("sum_price_label"))"/><button id="uic_add_order_button" name="button" value="add_order_button"  class="uic button-simple button-small" buttonName="add_order_button" tabindex="" style="left: 620px; top: 220px; width: 171px; height: 23px;  ">@(t._("Přidat objednávku"))</button><input id ="uic_address_textbox" name="address_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("address_textbox") ? formState["address_textbox"] : (ViewData.ContainsKey("inputData_address_textbox") ? @ViewData["inputData_address_textbox"] : ""))" class="uic input-single-line" style="left: 140px; top: 220px; width: 220px; height: 25px; "/><div id="uic_label20" name="label20"  class="uic control-label" contentTemplate="" style="left: 20px; top: 220px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label20") ? "Adresa".Replace("{var1}", (ViewData["inputData_label20"] ?? "").ToString()) : t._("Adresa") )</div></div><div id="uic_breadcrumb0" name="breadcrumb0" class="uic breadcrumb-navigation breadcrumb-navigation" style="left: 60px; top: 20px; width: 780px; height: 55px; "><div class="app-icon fa @ViewData["appIcon"]"></div><div class="nav-text">@(t._(ViewData["appName"].ToString())) &gt; @(t._(ViewData["pageName"].ToString()))</div></div><div id="uic_GroupOrder_header" name="GroupOrder_header"  class="uic form-heading" contentTemplate="" style="left: 60px; top: 80px; width: 144px; height: 40px; ">@Html.Raw(ViewData.ContainsKey("inputData_GroupOrder_header") ? "Hromadná objednávka pro asistentky".Replace("{var1}", (ViewData["inputData_GroupOrder_header"] ?? "").ToString()) : t._("Hromadná objednávka pro asistentky") )</div><div id="uic_Approver_label" name="Approver_label"  class="uic control-label" contentTemplate="" style="left: 80px; top: 140px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_Approver_label") ? "Schvalovatel".Replace("{var1}", (ViewData["inputData_Approver_label"] ?? "").ToString()) : t._("Schvalovatel") )</div><input id ="uic_approver_textbox" name="approver_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("approver_textbox") ? formState["approver_textbox"] : (ViewData.ContainsKey("inputData_approver_textbox") ? @ViewData["inputData_approver_textbox"] : ""))" class="uic input-single-line" style="left: 200px; top: 140px; width: 220px; height: 25px; "/><div id="uic_subscriber_name_label" name="subscriber_name_label"  class="uic control-label" contentTemplate="" style="left: 80px; top: 180px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_subscriber_name_label") ? "Uživatel".Replace("{var1}", (ViewData["inputData_subscriber_name_label"] ?? "").ToString()) : t._("Uživatel") )</div><div id="uic_subscriber_occupation_label" name="subscriber_occupation_label"  class="uic control-label" contentTemplate="" style="left: 80px; top: 220px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_subscriber_occupation_label") ? "Pozice".Replace("{var1}", (ViewData["inputData_subscriber_occupation_label"] ?? "").ToString()) : t._("Pozice") )</div><button id="uic_order_button" name="button" value="order_button"  class="uic button-simple button-large" buttonName="order_button" tabindex="" style="left: 680px; top: 620px; width: 199px; height: 31px;  ">@(t._("Objednat"))</button><div id="uic_label44" name="label44"  class="uic control-label" contentTemplate="" style="left: 80px; top: 700px; width: 600px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label44") ? "Postup pro zastupující asistentky při schválování hromadné objednávky:".Replace("{var1}", (ViewData["inputData_label44"] ?? "").ToString()) : t._("Postup pro zastupující asistentky při schválování hromadné objednávky:") )</div><div id="uic_label45" name="label45"  class="uic control-label" contentTemplate="" style="left: 80px; top: 740px; width: 780px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label45") ? "Pokud chcete využít hromadné objednávky, prosím, zadávejte více než jednu objednávku, v opačném případě využijte zadávání ".Replace("{var1}", (ViewData["inputData_label45"] ?? "").ToString()) : t._("Pokud chcete využít hromadné objednávky, prosím, zadávejte více než jednu objednávku, v opačném případě využijte zadávání ") )</div><div id="uic_label46" name="label46"  class="uic control-label" contentTemplate="" style="left: 80px; top: 760px; width: 780px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label46") ? "jednotlivých objednávek.".Replace("{var1}", (ViewData["inputData_label46"] ?? "").ToString()) : t._("jednotlivých objednávek.") )</div><div id="uic_label47" name="label47"  class="uic control-label" contentTemplate="" style="left: 80px; top: 800px; width: 780px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label47") ? "Jako schvalovatele uveďte osobu, kterou zastupujete. Pod vlastním profilem zadejte hromadnou objednávku.".Replace("{var1}", (ViewData["inputData_label47"] ?? "").ToString()) : t._("Jako schvalovatele uveďte osobu, kterou zastupujete. Pod vlastním profilem zadejte hromadnou objednávku.") )</div><div id="uic_label48" name="label48"  class="uic control-label" contentTemplate="" style="left: 80px; top: 820px; width: 780px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label48") ? "Po obdržení e-mailu se žádostí o schválení / zamítnutí objednávky, klikněte v e-mailu na odkaz: Evidence periodik knihovny.".Replace("{var1}", (ViewData["inputData_label48"] ?? "").ToString()) : t._("Po obdržení e-mailu se žádostí o schválení / zamítnutí objednávky, klikněte v e-mailu na odkaz: Evidence periodik knihovny.") )</div><div id="uic_label49" name="label49"  class="uic control-label" contentTemplate="" style="left: 80px; top: 860px; width: 780px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label49") ? "Po přesměrování do části aplikace - Detail hromadné objednávky - změňte profil na uživatele, kterého zastupujete. Přepnutí profilu".Replace("{var1}", (ViewData["inputData_label49"] ?? "").ToString()) : t._("Po přesměrování do části aplikace - Detail hromadné objednávky - změňte profil na uživatele, kterého zastupujete. Přepnutí profilu") )</div><div id="uic_label50" name="label50"  class="uic control-label" contentTemplate="" style="left: 80px; top: 880px; width: 780px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label50") ? "provedete kliknutím na odkaz Přepnout profil v pravém horním rohu obrazovky. V tabulce zvolte jméno nadřízeného, kterého zastupujete.".Replace("{var1}", (ViewData["inputData_label50"] ?? "").ToString()) : t._("provedete kliknutím na odkaz Přepnout profil v pravém horním rohu obrazovky. V tabulce zvolte jméno nadřízeného, kterého zastupujete.") )</div><div id="uic_label51" name="label51"  class="uic control-label" contentTemplate="" style="left: 80px; top: 920px; width: 780px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label51") ? "V případě schválení hromadné objednávky, klikněte na tlačítko schválit. Po schválení hromadné objednávky bude vystaven helpdesk obsahující".Replace("{var1}", (ViewData["inputData_label51"] ?? "").ToString()) : t._("V případě schválení hromadné objednávky, klikněte na tlačítko schválit. Po schválení hromadné objednávky bude vystaven helpdesk obsahující") )</div><div id="uic_label52" name="label52"  class="uic control-label" contentTemplate="" style="left: 80px; top: 940px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label52") ? "tuto objednávku.".Replace("{var1}", (ViewData["inputData_label52"] ?? "").ToString()) : t._("tuto objednávku.") )</div><select id="uic_approver_select_dropdown" name="approver_select_dropdown" tabindex=""  class="uic dropdown-select" style="left: 200px; top: 180px; width: 220px; height: 21px; ">@{ if(ViewData["dropdownData_approver_select_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_approver_select_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("approver_select_dropdown") && Convert.ToInt32(formState["approver_select_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_approver_select_dropdown") && ViewData["dropdownSelection_approver_select_dropdown"] is int && (int)ViewData["dropdownSelection_approver_select_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_occupation_select_dropdown" name="occupation_select_dropdown" tabindex=""  class="uic dropdown-select" style="left: 200px; top: 220px; width: 220px; height: 21px; ">@{ if(ViewData["dropdownData_occupation_select_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_occupation_select_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("occupation_select_dropdown") && Convert.ToInt32(formState["occupation_select_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_occupation_select_dropdown") && ViewData["dropdownSelection_occupation_select_dropdown"] is int && (int)ViewData["dropdownSelection_occupation_select_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><div id="uic_sum_price_label" name="sum_price_label"  class="uic control-label" contentTemplate="Celková cena je {{var1}},- Kč" style="left: 660px; top: 580px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_sum_price_label") ? "Celková cena je 0,- Kč".Replace("{var1}", (ViewData["inputData_sum_price_label"] ?? "").ToString()) : t._("Celková cena je 0,- Kč") )</div><div id="uic_label41" name="label41"  class="uic control-label" contentTemplate="" style="left: 480px; top: 140px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label41") ? "Společnost".Replace("{var1}", (ViewData["inputData_label41"] ?? "").ToString()) : t._("Společnost") )</div><div id="uic_label42" name="label42"  class="uic control-label" contentTemplate="" style="left: 480px; top: 180px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label42") ? "NS".Replace("{var1}", (ViewData["inputData_label42"] ?? "").ToString()) : t._("NS") )</div><input id ="uic_company_textbox" name="company_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("company_textbox") ? formState["company_textbox"] : (ViewData.ContainsKey("inputData_company_textbox") ? @ViewData["inputData_company_textbox"] : ""))" class="uic input-single-line" style="left: 580px; top: 140px; width: 220px; height: 25px; "/><input id ="uic_ns_textbox" name="ns_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("ns_textbox") ? formState["ns_textbox"] : (ViewData.ContainsKey("inputData_ns_textbox") ? @ViewData["inputData_ns_textbox"] : ""))" class="uic input-single-line" style="left: 580px; top: 180px; width: 220px; height: 25px; "/><input type="hidden" name="registry" value="@ViewData["crossBlockRegistry"]" />@Html.AntiForgeryToken()</form>