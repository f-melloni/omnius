@using FSS.Omnius.FrontEnd.Utils@{T t = new T((FSS.Omnius.Modules.CORE.Locale)ViewData["locale"]);}@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }@{Dictionary<string, string> formState = (Dictionary<string, string>)ViewData["formState"]; }<form class="mozaicForm" method="post" enctype = "multipart/form-data"><div id="uic_breadcrumb0" name="breadcrumb0" class="uic breadcrumb-navigation breadcrumb-navigation" style="left: 60px; top: 45px; width: 860px; height: 55px; "><div class="app-icon fa @ViewData["appIcon"]"></div><div class="nav-text">@(t._(ViewData["appName"].ToString())) &gt; @(t._(ViewData["pageName"].ToString()))</div></div><div id="uic_label1" name="label1"  class="uic form-heading" contentTemplate="" style="left: 90px; top: 135px; width: 297px; height: 40px; ">@Html.Raw(ViewData.ContainsKey("inputData_label1") ? "Zadání objednávky periodika".Replace("{var1}", (ViewData["inputData_label1"] ?? "").ToString()) : t._("Zadání objednávky periodika") )</div><div id="uic_label2" name="label2"  class="uic control-label" contentTemplate="" style="left: 100px; top: 240px; width: 138px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label2") ? "Společnost odběratele".Replace("{var1}", (ViewData["inputData_label2"] ?? "").ToString()) : t._("Společnost odběratele") )</div><div id="uic_label3" name="label3"  class="uic control-label" contentTemplate="" style="left: 100px; top: 280px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label3") ? "Odběratel".Replace("{var1}", (ViewData["inputData_label3"] ?? "").ToString()) : t._("Odběratel") )</div><div id="uic_label4" name="label4"  class="uic control-label" contentTemplate="" style="left: 100px; top: 320px; width: 188px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label4") ? "NS odběratele".Replace("{var1}", (ViewData["inputData_label4"] ?? "").ToString()) : t._("NS odběratele") )</div><input id ="uic_company_textbox" name="company_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("company_textbox") ? formState["company_textbox"] : (ViewData.ContainsKey("inputData_company_textbox") ? @ViewData["inputData_company_textbox"] : ""))" class="uic input-single-line" style="left: 320px; top: 240px; width: 360px; height: 25px; "/><input id ="uic_subscriber_textbox" name="subscriber_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("subscriber_textbox") ? formState["subscriber_textbox"] : (ViewData.ContainsKey("inputData_subscriber_textbox") ? @ViewData["inputData_subscriber_textbox"] : ""))" class="uic input-single-line" style="left: 320px; top: 280px; width: 280px; height: 25px; "/><div id="uic_label7" name="label7"  class="uic control-label" contentTemplate="" style="left: 100px; top: 360px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label7") ? "Periodikum".Replace("{var1}", (ViewData["inputData_label7"] ?? "").ToString()) : t._("Periodikum") )</div><div id="uic_label8" name="label8"  class="uic control-label" contentTemplate="" style="left: 100px; top: 400px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label8") ? "Četnost".Replace("{var1}", (ViewData["inputData_label8"] ?? "").ToString()) : t._("Četnost") )</div><div id="uic_label9" name="label9"  class="uic control-label" contentTemplate="" style="left: 100px; top: 440px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label9") ? "Forma periodika".Replace("{var1}", (ViewData["inputData_label9"] ?? "").ToString()) : t._("Forma periodika") )</div><div id="uic_label10" name="label10"  class="uic control-label" contentTemplate="" style="left: 100px; top: 480px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label10") ? "Typ periodika".Replace("{var1}", (ViewData["inputData_label10"] ?? "").ToString()) : t._("Typ periodika") )</div><div id="uic_label11" name="label11"  class="uic control-label" contentTemplate="" style="left: 100px; top: 560px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label11") ? "Počátek objednávky".Replace("{var1}", (ViewData["inputData_label11"] ?? "").ToString()) : t._("Počátek objednávky") )</div><div id="uic_label12" name="label12"  class="uic control-label" contentTemplate="" style="left: 100px; top: 600px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label12") ? "Konec objednávky".Replace("{var1}", (ViewData["inputData_label12"] ?? "").ToString()) : t._("Konec objednávky") )</div><div id="uic_label13" name="label13"  class="uic control-label" contentTemplate="" style="left: 100px; top: 640px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label13") ? "Schvalovatel".Replace("{var1}", (ViewData["inputData_label13"] ?? "").ToString()) : t._("Schvalovatel") )</div><div id="uic_label14" name="label14"  class="uic control-label" contentTemplate="" style="left: 100px; top: 680px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label14") ? "Dodací adresa / Email".Replace("{var1}", (ViewData["inputData_label14"] ?? "").ToString()) : t._("Dodací adresa / Email") )</div><input id ="uic_ns_textbox" name="ns_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("ns_textbox") ? formState["ns_textbox"] : (ViewData.ContainsKey("inputData_ns_textbox") ? @ViewData["inputData_ns_textbox"] : ""))" class="uic input-single-line" style="left: 320px; top: 320px; width: 360px; height: 25px; "/><textarea id="uic_ship_to_textbox" name="ship_to_textbox"  placeholder="@(t._(""))" tabindex="" class="uic input-multiline" style="left: 320px; top: 680px; width: 360px; height: 140px; ">@(formState.ContainsKey("ship_to_textbox") ? formState["ship_to_textbox"] : ViewData["inputData_ship_to_textbox"])</textarea><div id="uic_label21" name="label21"  class="uic control-label" contentTemplate="" style="left: 100px; top: 840px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label21") ? "Počet kusů".Replace("{var1}", (ViewData["inputData_label21"] ?? "").ToString()) : t._("Počet kusů") )</div><input id ="uic_item_count_textbox" name="item_count_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("item_count_textbox") ? formState["item_count_textbox"] : (ViewData.ContainsKey("inputData_item_count_textbox") ? @ViewData["inputData_item_count_textbox"] : ""))" class="uic input-single-line" style="left: 320px; top: 840px; width: 120px; height: 25px; " uicRole="@(t._("count"))"/><input id ="uic_note_textbox" name="note_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("note_textbox") ? formState["note_textbox"] : (ViewData.ContainsKey("inputData_note_textbox") ? @ViewData["inputData_note_textbox"] : ""))" class="uic input-single-line" style="left: 320px; top: 920px; width: 360px; height: 25px; "/><div id="uic_label24" name="label24"  class="uic control-label" contentTemplate="" style="left: 100px; top: 920px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label24") ? "Poznámka".Replace("{var1}", (ViewData["inputData_label24"] ?? "").ToString()) : t._("Poznámka") )</div><button id="uic_order_button" name="button" value="order_button"  class="uic button-simple button-large" buttonName="order_button" tabindex="" style="left: 500px; top: 980px; width: 198px; height: 31px;  ">@(t._("Objednat"))</button><select id="uic_periodical_dropdown" name="periodical_dropdown" tabindex=""  class="uic dropdown-select" style="left: 320px; top: 360px; width: 360px; height: 22px; "><option value="-1">@(t._("--- Prosím vyberte Periodikum ---"))</option>@{ if(ViewData["dropdownData_periodical_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_periodical_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("periodical_dropdown") && Convert.ToInt32(formState["periodical_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_periodical_dropdown") && ViewData["dropdownSelection_periodical_dropdown"] is int && (int)ViewData["dropdownSelection_periodical_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_interval_dropdown" name="interval_dropdown" tabindex=""  class="uic dropdown-select" style="left: 320px; top: 400px; width: 360px; height: 22px; ">@{ if(ViewData["dropdownData_interval_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_interval_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("interval_dropdown") && Convert.ToInt32(formState["interval_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_interval_dropdown") && ViewData["dropdownSelection_interval_dropdown"] is int && (int)ViewData["dropdownSelection_interval_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_form_dropdown" name="form_dropdown" tabindex=""  class="uic dropdown-select" style="left: 320px; top: 440px; width: 360px; height: 22px; ">@{ if(ViewData["dropdownData_form_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_form_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("form_dropdown") && Convert.ToInt32(formState["form_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_form_dropdown") && ViewData["dropdownSelection_form_dropdown"] is int && (int)ViewData["dropdownSelection_form_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_type_dropdown" name="type_dropdown" tabindex=""  class="uic dropdown-select" style="left: 320px; top: 480px; width: 360px; height: 22px; ">@{ if(ViewData["dropdownData_type_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_type_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("type_dropdown") && Convert.ToInt32(formState["type_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_type_dropdown") && ViewData["dropdownSelection_type_dropdown"] is int && (int)ViewData["dropdownSelection_type_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><input id ="uic_begin_dtpicker" name="begin_dtpicker"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("begin_dtpicker") ? formState["begin_dtpicker"] : (ViewData.ContainsKey("inputData_begin_dtpicker") ? @ViewData["inputData_begin_dtpicker"] : ""))" class="uic input-single-line input-with-datepicker" style="left: 320px; top: 560px; width: 220px; height: 25px; "/><input id ="uic_end_dtpicker" name="end_dtpicker"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("end_dtpicker") ? formState["end_dtpicker"] : (ViewData.ContainsKey("inputData_end_dtpicker") ? @ViewData["inputData_end_dtpicker"] : ""))" class="uic input-single-line input-with-datepicker" style="left: 320px; top: 600px; width: 220px; height: 25px; "/><input id ="uic_supperior_textbox" name="supperior_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("supperior_textbox") ? formState["supperior_textbox"] : (ViewData.ContainsKey("inputData_supperior_textbox") ? @ViewData["inputData_supperior_textbox"] : ""))" class="uic input-single-line" style="left: 320px; top: 640px; width: 360px; height: 25px; "/><div id="uic_price_label" name="price_label"  class="uic control-label" contentTemplate="" style="left: 100px; top: 880px; width: 74px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_price_label") ? "Celková cena".Replace("{var1}", (ViewData["inputData_price_label"] ?? "").ToString()) : t._("Celková cena") )</div><input id ="uic_price_box" name="price_box"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("price_box") ? formState["price_box"] : (ViewData.ContainsKey("inputData_price_box") ? @ViewData["inputData_price_box"] : ""))" class="uic input-single-line" style="left: 320px; top: 880px; width: 120px; height: 25px; " uicRole="@(t._("output"))"/><div id="uic_user_select_label" name="user_select_label"  class="uic control-label" contentTemplate="" style="left: 100px; top: 200px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_user_select_label") ? "Za koho objednáváte".Replace("{var1}", (ViewData["inputData_user_select_label"] ?? "").ToString()) : t._("Za koho objednáváte") )</div><select id="uic_user_select_dropdown" name="user_select_dropdown" tabindex=""  class="uic dropdown-select" style="left: 320px; top: 200px; width: 360px; height: 22px; ">@{ if(ViewData["dropdownData_user_select_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_user_select_dropdown"]){ <option value="@(option.Key)" @((formState.ContainsKey("user_select_dropdown") && Convert.ToInt32(formState["user_select_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_user_select_dropdown") && ViewData["dropdownSelection_user_select_dropdown"] is int && (int)ViewData["dropdownSelection_user_select_dropdown"] == option.Key) ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><input id ="uic_periodical_price_textbox" name="periodical_price_textbox"  type="text" placeholder="@(t._(""))" tabindex="" value="@(formState.ContainsKey("periodical_price_textbox") ? formState["periodical_price_textbox"] : (ViewData.ContainsKey("inputData_periodical_price_textbox") ? @ViewData["inputData_periodical_price_textbox"] : ""))" class="uic input-single-line" style="left: 320px; top: 520px; width: 220px; height: 25px; " uicRole="@(t._("price"))"/><div id="uic_label34" name="label34"  class="uic control-label" contentTemplate="" style="left: 100px; top: 520px; width: 75px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label34") ? "Cena".Replace("{var1}", (ViewData["inputData_label34"] ?? "").ToString()) : t._("Cena") )</div><input type="hidden" name="registry" value="@ViewData["crossBlockRegistry"]" />@Html.AntiForgeryToken()</form>