@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }@{ Dictionary<string, string> formState = (Dictionary<string, string>)ViewData["formState"]; }<div class="mozaicBootstrapPage"><div class="container"><div class="row"><form class="form-horizontal" method="post" _lpchecked="1"><div class="col-xs-12"><h1 class="">@(@"Edit pair configuration")</h1><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title">@(@"Main")</h3></div><div class="panel-body"><div class="col-xs-12"><div class="form-group"><label for="assetSign_input" class="col-sm-2">@(@"assetSign")</label><div class="input-group" style="width: 15%">
<select name="assetSign_input" class="form-control" id="assetSign_input">
    
    @{ if(ViewData["dropdownData_assetSign_input"] != null) {
            foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_assetSign_input"])) {
                <option value="@(option.Key)" @((formState.ContainsKey("assetSign_input") && Convert.ToInt32(formState["assetSign_input"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_assetSign_input") && ViewData["dropdownSelection_assetSign_input"] is int && (int)ViewData["dropdownSelection_assetSign_input"] == option.Key) ? "selected" : "")>
                    @(option.Value)
                </option>
            }
        }
    }    
</select></div></div><div class="form-group"><label for="currencySign_input" class="col-sm-2">@(@"currencySign")</label><div class="input-group" style="width: 15%">
<select name="currencySign_input" class="form-control" id="currencySign_input">
    
    @{ if(ViewData["dropdownData_currencySign_input"] != null) {
            foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_currencySign_input"])) {
                <option value="@(option.Key)" @((formState.ContainsKey("currencySign_input") && Convert.ToInt32(formState["currencySign_input"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_currencySign_input") && ViewData["dropdownSelection_currencySign_input"] is int && (int)ViewData["dropdownSelection_currencySign_input"] == option.Key) ? "selected" : "")>
                    @(option.Value)
                </option>
            }
        }
    }    
</select></div></div><div class="form-group"><label for="granuality_input" class="col-sm-2">@(@"granuality")</label><div class="input-group" style="width: 40%"><input type="number" name="granuality_input" value="@(formState.ContainsKey("granuality_input") ? formState["granuality_input"] : (ViewData.ContainsKey("inputData_granuality_input") ? @ViewData["inputData_granuality_input"] : ""))" class="form-control" id="granuality_input" /></div></div><div class="form-group"><label for="maxBudget_input" class="col-sm-2">@(@"maxBudget")</label><div class="input-group" style="width: 40%"><input type="number" name="maxBudget_input" value="@(formState.ContainsKey("maxBudget_input") ? formState["maxBudget_input"] : (ViewData.ContainsKey("inputData_maxBudget_input") ? @ViewData["inputData_maxBudget_input"] : ""))" class="form-control" id="maxBudget_input" /></div></div><div class="form-group"><label for="maxPrice_input" class="col-sm-2">@(@"maxPrice")</label><div class="input-group" style="width: 40%"><input type="number" name="maxPrice_input" value="@(formState.ContainsKey("maxPrice_input") ? formState["maxPrice_input"] : (ViewData.ContainsKey("inputData_maxPrice_input") ? @ViewData["inputData_maxPrice_input"] : ""))" class="form-control" id="maxPrice_input" /></div></div><div class="form-group"><label for="maxSize_input" class="col-sm-2">@(@"maxSize")</label><div class="input-group" style="width: 40%"><input type="number" name="maxSize_input" value="@(formState.ContainsKey("maxSize_input") ? formState["maxSize_input"] : (ViewData.ContainsKey("inputData_maxSize_input") ? @ViewData["inputData_maxSize_input"] : ""))" class="form-control" id="maxSize_input" /></div></div><div class="form-group"><label for="maxSlippagePct_input" class="col-sm-2">@(@"maxSlippagePct")</label><div class="input-group" style="width: 40%"><input type="number" name="maxSlippagePct_input" value="@(formState.ContainsKey("maxSlippagePct_input") ? formState["maxSlippagePct_input"] : (ViewData.ContainsKey("inputData_maxSlippagePct_input") ? @ViewData["inputData_maxSlippagePct_input"] : ""))" class="form-control" id="maxSlippagePct_input" /></div></div><div class="form-group"><label for="maxSpreadPct_input" class="col-sm-2">@(@"maxSpreadPct")</label><div class="input-group" style="width: 40%"><input type="number" name="maxSpreadPct_input" value="@(formState.ContainsKey("maxSpreadPct_input") ? formState["maxSpreadPct_input"] : (ViewData.ContainsKey("inputData_maxSpreadPct_input") ? @ViewData["inputData_maxSpreadPct_input"] : ""))" class="form-control" id="maxSpreadPct_input" /></div></div><div class="form-group"><label for="minPrice_input" class="col-sm-2">@(@"minPrice")</label><div class="input-group" style="width: 40%"><input type="number" name="minPrice_input" value="@(formState.ContainsKey("minPrice_input") ? formState["minPrice_input"] : (ViewData.ContainsKey("inputData_minPrice_input") ? @ViewData["inputData_minPrice_input"] : ""))" class="form-control" id="minPrice_input" /></div></div><div class="form-group"><label for="minSize_input" class="col-sm-2">@(@"minSize")</label><div class="input-group" style="width: 40%"><input type="number" name="minSize_input" value="@(formState.ContainsKey("minSize_input") ? formState["minSize_input"] : (ViewData.ContainsKey("inputData_minSize_input") ? @ViewData["inputData_minSize_input"] : ""))" class="form-control" id="minSize_input" /></div></div><div class="form-group"><label for="pipSize_input" class="col-sm-2">@(@"pipSize")</label><div class="input-group" style="width: 40%"><input type="number" name="pipSize_input" value="@(formState.ContainsKey("pipSize_input") ? formState["pipSize_input"] : (ViewData.ContainsKey("inputData_pipSize_input") ? @ViewData["inputData_pipSize_input"] : ""))" class="form-control" id="pipSize_input" /></div></div></div></div></div><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title">@(@"Money service")</h3></div><div class="panel-body"><div class="col-xs-12"><div class="form-group"><label for="type_input" class="col-sm-2">@(@"type")</label><div class="input-group" style="width: 81%"><input type="text" name="type_input" value="@(formState.ContainsKey("type_input") ? formState["type_input"] : (ViewData.ContainsKey("inputData_type_input") ? @ViewData["inputData_type_input"] : ""))" class="form-control" id="type_input" /></div></div><div class="form-group"><label for="addr_input" class="col-sm-2">@(@"addr")</label><div class="input-group" style="width: 81%"><input type="text" name="addr_input" value="@(formState.ContainsKey("addr_input") ? formState["addr_input"] : (ViewData.ContainsKey("inputData_addr_input") ? @ViewData["inputData_addr_input"] : ""))" class="form-control" id="addr_input" /></div></div><p class="" style="display:inline-block; margin: 0 60px 20px 0; font-weight: bold;">@(@"logTrafic")</p><div class="radio" style="display:inline-block; margin-left: 20px;"><label for="" class="" style="margin-right:15px;"><input type="radio" name="logTrafic_radio" value="true" class="" checked="checked" id="logTrafic_radio_true" @((formState.ContainsKey("logTrafic_radio_true") && formState["logTrafic_radio_true"] == "true") || (ViewData.ContainsKey("checkboxData_logTrafic_radio_true") && (ViewData["checkboxData_logTrafic_radio_true"] as bool? == true)) ? " checked" : "") /> true</label><label for="" class=""><input type="radio" name="logTrafic_radio" value="false" class="" id="logTrafic_radio_false" @((formState.ContainsKey("logTrafic_radio_false") && formState["logTrafic_radio_false"] == "false") || (ViewData.ContainsKey("checkboxData_logTrafic_radio_false") && (ViewData["checkboxData_logTrafic_radio_false"] as bool? == true)) ? " checked" : "") /> false</label></div><div class="form-group"><label for="firstTradeId_input" class="col-sm-2">@(@"firstTradeId")</label><div class="input-group" style="width: 81%"><input type="text" name="firstTradeId_input" value="@(formState.ContainsKey("firstTradeId_input") ? formState["firstTradeId_input"] : (ViewData.ContainsKey("inputData_firstTradeId_input") ? @ViewData["inputData_firstTradeId_input"] : ""))" class="form-control" id="firstTradeId_input" /></div></div></div></div></div><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title">@(@"Matching engine settings")</h3></div><div class="panel-body"><div class="form-group"><label for="firstTradeId_input" class="col-sm-2">@(@"IP")</label><div class="input-group" style="width: 81%"><input type="text" name="ip" value="@(formState.ContainsKey("ip") ? formState["ip"] : (ViewData.ContainsKey("inputData_ip") ? @ViewData["inputData_ip"] : ""))" class="form-control mbe-active" id="ip" /></div></div><div class="form-group"><label for="firstTradeId_input" class="col-sm-2">@(@"Port")</label><div class="input-group" style="width: 81%"><input type="text" name="port" value="@(formState.ContainsKey("port") ? formState["port"] : (ViewData.ContainsKey("inputData_port") ? @ViewData["inputData_port"] : ""))" class="form-control" id="port" /></div></div></div></div><button type="submit" class="btn btn-lg btn-primary" id="save_button" value="save_button" name="button" style="margin-bottom: 30px;" >@(@"Save changes")</button></div>@Html.AntiForgeryToken()</form></div></div></div>