@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }<div class="mozaicBootstrapPage"><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#RigUpDownHistoryGraphBody" aria-expanded="true">@(@"Exchange Balance")</h3></div><div class="panel-body collapse in" aria-expanded="true"><div class="row"><div class="col-xs-12"><p class="text-center" style="font-size: 50px;" id="total_balance">@(@"Total Balance: {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("total_balance")).Value ?? "").ToString()))</p></div></div><div class="row"><div class="col-md-2 col-xs-6 col-sm-4" style="margin: 15px 0; border-right: 2px solid black;"><img src="/Content/Images/Icons/bitcoin_black.png" height="25" alt="" class="" style="margin-top: -5px;"></img><span class="" style="font-size: 16px;margin-left: 10px;">@(@"BTC Balance")</span><p class="" style="font-size: 35px;" id="BTC_balance">@(@"{var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("BTC_balance")).Value ?? "").ToString()))</p><p class="" style="font-size: 16px;" id="BTC_balance_diff">@(@"{var1} difference".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("BTC_balance_diff")).Value ?? "").ToString()))</p></div><div class="col-md-2 col-xs-6 col-sm-4" style="margin: 15px 0; border-right: 2px solid black;"><img src="/Content/Images/Icons/ether_black.png" height="25" alt="" class="" style="margin-top: -5px;"></img><span class="" style="font-size: 16px; margin-left: 10px;">@(@"ETH Balance")</span><p class="" style="font-size: 35px;" id="ETH_balance">@(@"{var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("ETH_balance")).Value ?? "").ToString()))</p><p class="" style="font-size: 16px;" id="ETH_balance_diff">@(@"{var1} difference".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("ETH_balance_diff")).Value ?? "").ToString()))</p></div><div class="col-md-2 col-xs-6 col-sm-4" style="margin: 15px 0; border-right: 2px solid black;"><img src="/Content/Images/Icons/zcash_black.png" height="25" alt="" class="" style="margin-top: -5px;"></img><span class="" style="font-size: 16px; margin-left: 10px;">@(@"ZEC Balance")</span><p class="" style="font-size: 35px;" id="ZEC_balance">@(@"{var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("ZEC_balance")).Value ?? "").ToString()))</p><p class="" style="font-size: 16px;" id="ZEC_balance_diff">@(@"{var1} difference".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("ZEC_balance_diff")).Value ?? "").ToString()))</p></div><div class="col-md-2 col-xs-6 col-sm-4" style="margin: 15px 0; border-right: 2px solid black;"><img src="/Content/Images/Icons/ltc_dark2.png" height="25" alt="" class="" style="margin-top: -5px;"></img><span class="" style="font-size: 16px; margin-left: 10px;">@(@"LTC Balance")</span><p class="" style="font-size: 35px;" id="LTC_balance">@(@"{var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("LTC_balance")).Value ?? "").ToString()))</p><p class="" style="font-size: 16px;" id="LTC_balance_diff">@(@"{var1} difference".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("LTC_balance_diff")).Value ?? "").ToString()))</p></div><div class="col-md-2 col-xs-6 col-sm-4" style="margin: 15px 0; border-right: 2px solid black;"><img src="/Content/Images/Icons/monero_black.png" height="25" alt="" class="" style="margin-top: -5px;"></img><span class="" style="font-size: 16px; margin-left: 10px;">@(@"XMR Balance")</span><p class="" style="font-size: 35px;" id="XMR_balance">@(@"{var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("XMR_balance")).Value ?? "").ToString()))</p><p class="" style="font-size: 16px;" id="XMR_balance_diff">@(@"{var1} difference".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("XMR_balance_diff")).Value ?? "").ToString()))</p></div><div class="col-md-2 col-xs-6 col-sm-4" style="margin: 15px 0;"><img src="/Content/Images/Icons/dash_black.png" height="25" alt="" class="" style="margin-top: -5px;"></img><span class="" style="font-size: 16px; margin-left: 8px;">@(@"DASH Balance")</span><p class="" style="font-size: 35px;" id="DASH_balance">@(@"{var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("DASH_balance")).Value ?? "").ToString()))</p><p class="" style="font-size: 16px;" id="DASH_balance_diff">@(@"{var1} difference".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("DASH_balance_diff")).Value ?? "").ToString()))</p></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading" role="button" aria-expanded="true" href="#minerStatusBody" data-toggle="collapse"><h3 class="panel-title">@(@"Cash Movement")</h3></div><div class="panel-body collapse in" aria-expanded="true"><div class="row"><div class="col-xs-12 col-md-8"><h3 class="text-center" style="margin-top: 10px;">@(@"Transfers")</h3></div><div class="col-xs-12 col-md-4"><h3 class="text-center" style="margin-top: 10px;">@(@"Withdrawal requests")</h3>
@{ if(ViewData.ContainsKey("tableData_Withdrawal_request_table") && ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="0" data-dtordering="1" data-dtcolumnfilter="0" data-dtserverside="0" id="Withdrawal_request_table" role="grid" aria-describedby="DataTables_Table_0_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="Stop" class="fa fa-times-circle" data-action="Stop" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Withdrawal_request_table" />
</div></div></div></div></div></div><div class="row"><div class="col-xs-12 col-md-4"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title">@(@"Bank Accounts")</h3></div><div class="panel-body">
@{ if(ViewData.ContainsKey("tableData_bank_accounts_table") && ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="0" data-dtordering="1" data-dtcolumnfilter="0" data-dtserverside="0" id="bank_accounts_table" role="grid" aria-describedby="DataTables_Table_0_info" style="margin-top: 44px;">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="bank_accounts_table" />
</div></div></div><div class="col-xs-12 col-md-8"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExpectationVSRealityBody" aria-expanded="true">@(@"Wallets")</h3></div><div class="panel-body collapse in" aria-expanded="true"><div class="row"><div class="col-xs-12 col-md-6">
@{ if(ViewData.ContainsKey("tableData_Hot_wallets_table") && ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="0" data-dtordering="1" data-dtcolumnfilter="0" data-dtserverside="0" id="Hot_wallets_table" role="grid" aria-describedby="Hot_wallets_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Hot_wallets_table" />
</div><div class="col-xs-12 col-md-6">
@{ if(ViewData.ContainsKey("tableData_Cold_wallet_table") && ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="0" data-dtordering="1" data-dtcolumnfilter="0" data-dtserverside="0" id="Cold_wallet_table" role="grid" aria-describedby="Cold_wallet_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Cold_wallet_table" />
</div></div></div></div></div></div><div class="col-sm-6 col-xs-12"><div class="panel panel-default" id="panelActualYield" ><div class="panel-heading" role="button" aria-expanded="true" href="#actualYieldBody" data-toggle="collapse"><h3 class="panel-title">@(@"Earnings")</h3></div><div class="@(@"panel-body {var1} collapse in".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("actualYieldBody")).Value ?? "").ToString()))" id="actualYieldBody" aria-expanded="true" style="padding: 0px;"><div class=""><ul class="nav nav-tabs"><li class=""><a href="#tab-1" data-toggle="tab" aria-expanded="false" class="active">@(@"Daily")</a></li><li class=""><a href="#tab-2" data-toggle="tab" aria-expanded="false" class="">@(@"Weekly")</a></li><li class="active"><a href="#tab-3" data-toggle="tab" aria-expanded="true" class="">@(@"Monthly")</a></li></ul><div class="tab-content"><div class="tab-pane" id="tab-1"><div class="" style="height:338px"><div class="col-xs-12 col-sm-6"><div style="margin-top: 30px; width: 350px; " class=""><span id="earnings_amount" style="font-weight: 500; font-size: 300%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("earnings_amount")).Value ?? "").ToString()))</span></div></div><div class="col-xs-12 col-sm-6"><div style="margin-top: 10px;" class=""><span id="yield_amount" style="font-size: 14x;font-weight: 700;float: right;padding: 25;color: rgb(8, 167, 34);" class="">@(@"Cryptocurrency profit ${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("yield_amount")).Value ?? "").ToString()))</span></div><div style="margin-top: 88px;" class=""><span id="cost_amount" style="font-size: 14px;font-weight: 700;float: right;padding: 25;color: #e20909;" class="">@(@"Service cost ${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("cost_amount")).Value ?? "").ToString()))</span></div></div><div class="col-xs-12 col-sm-12" style="padding-top: 50px;"><div class="row">
@if((ViewData.ContainsKey("hideBTC") && (bool)ViewData["hideBTC"]) == true) {
<div data-varname="hideBTC" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Bitcoin")</p><span id="change_BTC" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_BTC")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="changebtc">@(@" / BTC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("changebtc")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideETH") && (bool)ViewData["hideETH"]) == true) {
<div data-varname="hideETH" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Ethereum")</p><span id="change_Ethereum" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_Ethereum")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="ETH_actual_yield">@(@" / ETH {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("ETH_actual_yield")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideZEC") && (bool)ViewData["hideZEC"]) == true) {
<div data-varname="hideZEC" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"ZCash")</p><span id="change_ZEC" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ZEC")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="changezec">@(@" / ZEC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("changezec")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideDCR") && (bool)ViewData["hideDCR"]) == true) {
<div data-varname="hideDCR" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Decred")</p><span id="change_DCR" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_DCR")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="changedcr">@(@" / DCR  {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("changedcr")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideLTC") && (bool)ViewData["hideLTC"]) == true) {
<div data-varname="hideLTC" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Litecoin")</p><span id="change_LTC" style="font-weight: 400; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_LTC")).Value ?? "").ToString()))</span><span class="" style="font-weight: 400; font-size: 130%;" id="changeltc">@(@" / LTC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("changeltc")).Value ?? "").ToString()))</span></div></div></div>
}</div></div></div></div><div class="tab-pane" id="tab-2"><div class="" style="height:250px"><div class="col-xs-12 col-sm-6"><div style="margin-top: 30px; width: 350px; " class=""><span id="earnings_amount_weekly" style="font-weight: 500; font-size: 300%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("earnings_amount_weekly")).Value ?? "").ToString()))</span></div></div><div class="col-xs-12 col-sm-6"><div style="margin-top: 10px;" class=""><span id="yield_amount_weekly" style="font-size: 14x;font-weight: 700;float: right;padding: 25;color: rgb(8, 167, 34);" class="">@(@"Cryptocurrency profit ${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("yield_amount_weekly")).Value ?? "").ToString()))</span></div><div style="margin-top: 88px;" class=""><span style="font-size: 14px;font-weight: 700;float: right;padding: 25;color: #e20909;" class="" id="cost_amount_weekly">@(@"Service cost ${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("cost_amount_weekly")).Value ?? "").ToString()))</span></div></div><div class="col-xs-12 col-sm-12" style="padding-top: 20px;"><div class="row">
@if((ViewData.ContainsKey("hideBTCWeek") && (bool)ViewData["hideBTCWeek"]) == true) {
<div data-varname="hideBTCWeek" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Bitcoin")</p><span id="change_BTC_USD_weekly" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_BTC_USD_weekly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="change_btc_weekly">@(@" / BTC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_btc_weekly")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideETHWeek") && (bool)ViewData["hideETHWeek"]) == true) {
<div data-varname="hideETHWeek" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Ethereum")</p><span id="change_ETH_USD_weekly" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ETH_USD_weekly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="change_ETH_weekly">@(@" / ETH {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ETH_weekly")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideZECWeek") && (bool)ViewData["hideZECWeek"]) == true) {
<div data-varname="hideZECWeek" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"ZCash")</p><span id="change_ZEC_USD_weekly" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ZEC_USD_weekly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="change_zec_weekly">@(@" / ZEC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_zec_weekly")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideDCRWeek") && (bool)ViewData["hideDCRWeek"]) == true) {
<div data-varname="hideDCRWeek" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Decred")</p><span id="change_DCR_USD_weekly" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_DCR_USD_weekly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="change_dcr_weekly">@(@" / DCR  {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_dcr_weekly")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideLTCWeek") && (bool)ViewData["hideLTCWeek"]) == true) {
<div data-varname="hideLTCWeek" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Litecoin")</p><span id="change_LTC_USD_weekly" style="font-weight: 400; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_LTC_USD_weekly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 400; font-size: 130%;" id="change_ltc_weekly">@(@" / LTC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ltc_weekly")).Value ?? "").ToString()))</span></div></div></div>
}</div></div></div></div><div class="tab-pane active" id="tab-3"><div class="" style="height:250px;"><div class="col-xs-12 col-sm-6"><div style="margin-top: 30px; width: 350px; " class=""><span id="earnings_amount_monthly" style="font-weight: 500; font-size: 300%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("earnings_amount_monthly")).Value ?? "").ToString()))</span></div></div><div class="col-xs-12 col-sm-6"><div style="margin-top: 10px;" class=""><span id="yield_amount_monthly" style="font-size: 14x;font-weight: 700;float: right;padding: 25;color: rgb(8, 167, 34);" class="">@(@"Cryptocurrency profit ${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("yield_amount_monthly")).Value ?? "").ToString()))</span></div><div style="margin-top: 88px;" class=""><span id="cost_amount_monthly" style="font-size: 14px;font-weight: 700;float: right;padding: 25;color: #e20909;" class="">@(@"Service cost ${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("cost_amount_monthly")).Value ?? "").ToString()))</span></div></div><div class="col-xs-12 col-sm-12" style="padding-top: 20px;"><div class="row">
@if((ViewData.ContainsKey("hideBTCMonth") && (bool)ViewData["hideBTCMonth"]) == true) {
<div data-varname="hideBTCMonth" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Bitcoin")</p><span id="change_BTC_USD_monthly" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_BTC_USD_monthly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="change_btc_monthly">@(@" / BTC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_btc_monthly")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideETHMonth") && (bool)ViewData["hideETHMonth"]) == true) {
<div data-varname="hideETHMonth" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Ethereum")</p><span id="change_ETH_USD_monthly" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ETH_USD_monthly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="change_ETH_monthly">@(@" / ETH {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ETH_monthly")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideZECMonth") && (bool)ViewData["hideZECMonth"]) == true) {
<div data-varname="hideZECMonth" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"ZCash")</p><span id="change_ZEC_USD_monthly" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ZEC_USD_monthly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="change_zec_monthly">@(@" / ZEC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_zec_monthly")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideDCRMonth") && (bool)ViewData["hideDCRMonth"]) == true) {
<div data-varname="hideDCRMonth" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Decred")</p><span id="change_DCR_USD_monthly" style="font-weight: 500; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_DCR_USD_monthly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 500; font-size: 130%;" id="change_dcr_monthly">@(@" / DCR  {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_dcr_monthly")).Value ?? "").ToString()))</span></div></div></div>
}
@if((ViewData.ContainsKey("hideLTCMonth") && (bool)ViewData["hideLTCMonth"]) == true) {
<div data-varname="hideLTCMonth" class=""><div class=""><div class="col-xs-6 col-md-4"><p class="">@(@"Litecoin")</p><span id="change_LTC_USD_monthly" style="font-weight: 400; font-size: 130%;" class="">@(@"$ {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_LTC_USD_monthly")).Value ?? "").ToString()))</span><span class="" style="font-weight: 400; font-size: 130%;" id="change_ltc_monthly">@(@" / LTC {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("change_ltc_monthly")).Value ?? "").ToString()))</span></div></div></div>
}</div></div></div></div></div></div></div><div class="panel-footer hidden"><span class="">@(@"Panel footer")</span></div></div><div class="panel panel-default" id="ExchangeRates" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExchangeRatesBody" aria-expanded="true">@(@"Exchange rates")</h3></div><div class="panel-body collapse in" id="ExchangeRatesBody" style="padding: 0px; height: 493px" aria-expanded="true"><div class="" style="height: 430px"><div class="col-xs-12" style="margin-top: 12px"><table class="table borderless"><thead ><tr class=""><th class="text-center" style="width: 65px;"></th><th class="text-left" style="font-weight: 700; font-size: 20px; vertical-align: middle;"></th><th class="context-menu-active text-center" style="font-weight: 600; font-size: 16px; vertical-align: middle;"><span class="">@(@"Our Rate")</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"Poloniex")</th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"Bitfinex")</th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"Kraken")</th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"Bitstamp")</th></tr><tr class=""><th class="text-center" style="vertical-align: middle;"><img alt="" src="/Content/Images/Icons/bitcoin_black.png" height="38" class=""></img></th><th class="text-left" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"BTC")</th><th class="text-center" style="font-weight: 700px; font-size: 16px; vertical-align: middle;"><span id="bitcoin_value" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("bitcoin_value")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Poloniex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change")).Value ?? "").ToString()))</span><span id="Poloniex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitfinex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change")).Value ?? "").ToString()))</span><span id="Bitfinex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Kraken_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change")).Value ?? "").ToString()))</span><span id="Kraken_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitstamp_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change")).Value ?? "").ToString()))</span><span id="Bitstamp_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change_percent")).Value ?? "").ToString()))</span></th></tr></thead><tbody class="mbe-active"><tr class=""><th class="text-center" style="vertical-align: middle;"><img alt="" src="/Content/Images/Icons/bitcoin_black.png" height="38" class=""></img></th><th class="text-left" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"ETH")</th><th class="text-center" style="font-weight: 700px; font-size: 16px; vertical-align: middle;"><span id="ethereum_value" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("ethereum_value")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Poloniex_eth_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_eth_change")).Value ?? "").ToString()))</span><span id="Poloniex_eth_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_eth_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitfinex_eth_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_eth_change")).Value ?? "").ToString()))</span><span id="Bitfinex_eth_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_eth_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Kraken_eth_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_eth_change")).Value ?? "").ToString()))</span><span id="Kraken_eth_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_eth_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitstamp_eth_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_eth_change")).Value ?? "").ToString()))</span><span id="Bitstamp_eth_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_eth_change_percent")).Value ?? "").ToString()))</span></th></tr><tr class=""><th class="text-center" style="vertical-align: middle;"><img alt="" src="/Content/Images/Icons/bitcoin_black.png" height="38" class=""></img></th><th class="text-left" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"ZEC")</th><th class="text-center" style="font-weight: 700px; font-size: 16px; vertical-align: middle;"><span id="bitcoin_value" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("bitcoin_value")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Poloniex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change")).Value ?? "").ToString()))</span><span id="Poloniex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitfinex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change")).Value ?? "").ToString()))</span><span id="Bitfinex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Kraken_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change")).Value ?? "").ToString()))</span><span id="Kraken_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitstamp_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change")).Value ?? "").ToString()))</span><span id="Bitstamp_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change_percent")).Value ?? "").ToString()))</span></th></tr><tr class=""><th class="text-center" style="vertical-align: middle;"><img alt="" src="/Content/Images/Icons/bitcoin_black.png" height="38" class=""></img></th><th class="text-left" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"LTC")</th><th class="text-center" style="font-weight: 700px; font-size: 16px; vertical-align: middle;"><span id="bitcoin_value" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("bitcoin_value")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Poloniex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change")).Value ?? "").ToString()))</span><span id="Poloniex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitfinex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change")).Value ?? "").ToString()))</span><span id="Bitfinex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Kraken_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change")).Value ?? "").ToString()))</span><span id="Kraken_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitstamp_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change")).Value ?? "").ToString()))</span><span id="Bitstamp_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change_percent")).Value ?? "").ToString()))</span></th></tr><tr class=""><th class="text-center" style="vertical-align: middle;"><img alt="" src="/Content/Images/Icons/bitcoin_black.png" height="38" class=""></img></th><th class="text-left" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"XMR")</th><th class="text-center" style="font-weight: 700px; font-size: 16px; vertical-align: middle;"><span id="bitcoin_value" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("bitcoin_value")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Poloniex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change")).Value ?? "").ToString()))</span><span id="Poloniex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitfinex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change")).Value ?? "").ToString()))</span><span id="Bitfinex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Kraken_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change")).Value ?? "").ToString()))</span><span id="Kraken_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitstamp_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change")).Value ?? "").ToString()))</span><span id="Bitstamp_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change_percent")).Value ?? "").ToString()))</span></th></tr><tr class=""><th class="text-center" style="vertical-align: middle;"><img alt="" src="/Content/Images/Icons/bitcoin_black.png" height="38" class=""></img></th><th class="text-left" style="font-weight: 700; font-size: 16px; vertical-align: middle;">@(@"DASH")</th><th class="text-center" style="font-weight: 700px; font-size: 16px; vertical-align: middle;"><span id="bitcoin_value" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("bitcoin_value")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Poloniex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change")).Value ?? "").ToString()))</span><span id="Poloniex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Poloniex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitfinex_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change")).Value ?? "").ToString()))</span><span id="Bitfinex_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitfinex_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Kraken_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change")).Value ?? "").ToString()))</span><span id="Kraken_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Kraken_btc_change_percent")).Value ?? "").ToString()))</span></th><th class="text-center" style="font-weight: 700; font-size: 16px; vertical-align: middle;"><span id="Bitstamp_btc_change" class="">@(@"${var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change")).Value ?? "").ToString()))</span><span id="Bitstamp_btc_change_percent" style="font-weight:500;" class="">@(@"  ({var1}%)".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("Bitstamp_btc_change_percent")).Value ?? "").ToString()))</span></th></tr></tbody><tbody></tbody></table></div></div></div></div></div></div>