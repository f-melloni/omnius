@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }@{ Dictionary<string, string> formState = (Dictionary<string, string>)ViewData["formState"]; }<div class="mozaicBootstrapPage"><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#RigUpDownHistoryGraphBody" aria-expanded="true">@(@"Exchange Balance")</h3></div><div class="panel-body collapse in" aria-expanded="true"><div class="row"><div class="col-xs-12"><p class="text-center" style="font-size: 50px;" id="total_balance">@(@"Total Balance: {var1} $".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("total_balance")).Value ?? "").ToString()))</p></div></div><div class="row">
@{ if(ViewData.ContainsKey("currency_foreach")) {
        foreach(var row in (IEnumerable<FSS.Omnius.Modules.Entitron.DBItem>)ViewData["currency_foreach"]) {
            <div class="">
                <div class="col-md-2 col-xs-6 col-sm-4" style="margin: 15px 0; border-right: 2px solid black;"><img src="/Content/Images/Icons/@row["image_link"]" alt="" class="" style="margin-top: -5px;" height="25"></img><span class="" style="font-size: 16px;margin-left: 10px;">@(row["currency"].ToString())</span><span class="">@(@" Balance")</span><p class="" style="font-size: 35px;" id="BTC_balance">@(row["ex_curr"].ToString())</p><span class="" style="font-size: 16px;" id="BTC_balance_diff">@(row["diff"].ToString())</span><span class="" style="font-size: 16px;">@(@" difference")</span></div>   
            </div>
        }
    }
}</div></div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading" role="button" aria-expanded="true" href="#minerStatusBody" data-toggle="collapse"><h3 class="panel-title">@(@"Cash Movement")</h3></div><div class="panel-body collapse in" aria-expanded="true"><div class="row"><div class="clearfix"><div class="col-xs-12 col-md-8"><h3 class="text-center" style="margin-top: 10px;">@(@"Transfers")</h3><div class="graphWrapper" id="transfers_highchart" style="height: 400px;">@Html.Raw(@"<div id=""transfers_highchart_graph""></div><script>transfers_highchart_graph_chart = new Highcharts.stockChart({
  rangeSelector: {
  	selected: $.cookie('transfers_highchart_graph_chart_selectedRange') || 0
  },
  chart: {
    renderTo: 'transfers_highchart_graph',
    events: {
      redraw: function() {
        $.cookie('transfers_highchart_graph_chart_selectedRange', this.rangeSelector.selected, { expires: 365 });
      }
    }
  },
  title: {
    text: ''
  },
  credits: {
    enabled: false
  },
  xAxis: {
    type: 'datetime',
    minPadding: 0,
    maxPadding: 0,
    lineColor: '#fff',
    lineWidth: 2,
    tickLength: 0,
    labels: {
      y: 15
    }
  },
  yAxis: {
    title: {
      text: ''
    },
    labels: {
      formatter: function () {
        var isNegative = this.value < 0 ? '-' : '';
        var absValue = Math.abs(this.value);
        return isNegative + '$' + this.axis.defaultLabelFormatter.call({
          axis: this.axis,
          value: absValue
        });
      },
      x: -5
    },
    opposite: true,
    minPadding: 0,
    maxPadding: 0,
    lineColor: '#fff',
    lineWidth: 2,
    tickLength: 0,
    gridLineColor: 'rgba(255,255,255,0.5)',
    gridZIndex: 4,
    min: 0
  },
  legend: {
    enabled: false
  },
  plotOptions: {
    area: {
      marker: {
        radius: 2,
        enabled: false
      },
      fillOpacity: 0.5,
      lineWidth: 1,
      states: {
        hover: {
          lineWidth: 1
        }
      },
      threshold: null
    }
  },
  series: [{
    type: 'area',
    name: 'Expected profit',
    zIndex: 3
  },{
    type: 'area',
    name: '',
    color: '#ff0000',
    fillOpacity: 0.75,
    zIndex: 1,
    tooltip: {
      pointFormat: ''
    }
  },{
    type: 'area',
    name: 'Real profit',
    color: Highcharts.theme.colors[2],
    fillOpacity: 1,
    zIndex: 2
  }],
  tooltip: {
    valuePrefix: '$'
  },
  data: {
    csv: '{var1}',
    complete: function(options) {
      console.log(options);
    }
  }
});

            </script>".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("transfers_highchart")).Value ?? "").ToString()))</div></div><div class="col-xs-12 col-md-4"><h3 class="text-center" style="margin-top: 10px;">@(@"Withdrawal requests")</h3>
@{ if(ViewData.ContainsKey("tableData_Withdrawal_request_table") && ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Withdrawal_request_table" role="grid" aria-describedby="DataTables_Table_0_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="Allow" class="fa fa-check-circle" data-action="Allow" data-idparam="modelId" data-confirm=""></i> <i title="Stop" class="fa fa-times-circle" data-action="Stop" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Withdrawal_request_table" />
</div></div></div></div></div></div></div><div class="row"><div class="col-xs-12 col-md-4"><div class="panel panel-default" ><div class="panel-heading"><div class="clearfix"><h3 class="panel-title pull-left">@(@"Bank Accounts")</h3><button type="button" class="btn pull-right btn-primary btn-xs" name="button" value="newBankAccount" id="newBankAccount" data-toggle="modal" data-target="#bankaccountmodal" bankaccountmodal="bankaccountmodal" >@(@"AddBankAccount")</button></div></div><div class="panel-body">
@{ if(ViewData.ContainsKey("tableData_bank_accounts_table") && ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="bank_accounts_table" role="grid" aria-describedby="DataTables_Table_0_info" style="margin-top: 44px;">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="Delete" class="fa fa-remove" data-action="Delete" data-idparam="deleteId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="bank_accounts_table" />
</div></div></div><div class="col-md-8 col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><div class="clearfix"><div class="col-xs-12 col-sm-6"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExpectationVSRealityBody" aria-expanded="true">Wallets<button type="button" class="btn btn-primary btn-xs pull-right" name="button" value="addHotWallet" id="addHotWallet" data-toggle="modal" data-target="#hotWallet" >@(@"AddHotWallet")</button></h3></div><div class="col-xs-12 col-sm-6"><button type="button" class="btn btn-primary btn-xs pull-right" name="button" value="addColdWallet" id="addColdWallet" data-toggle="modal" data-target="#coldWallet" >@(@"AddColdWallet")</button></div></div></div><div class="panel-body collapse in" aria-expanded="true"><div class="row"><div class="clearfix"><div class="col-xs-12 col-lg-6"><h3 class="text-center" style="margin-top: 10px;">@(@"Hot")</h3>
@{ if(ViewData.ContainsKey("tableData_Hot_wallets_table") && ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Hot_wallets_table" role="grid" aria-describedby="Hot_wallets_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="Delete" class="fa fa-remove" data-action="delete" data-idparam="deleteId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Hot_wallets_table" />
</div><div class="col-xs-12 col-lg-6"><h3 class="text-center" style="margin-top: 10px;">@(@"Cold")</h3>
@{ if(ViewData.ContainsKey("tableData_Cold_wallet_table") && ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Cold_wallet_table" role="grid" aria-describedby="Cold_wallet_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="Delete" class="fa fa-remove" data-action="delete" data-idparam="deleteId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Cold_wallet_table" />
</div></div></div></div></div></div><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExchangeRatesBody" aria-expanded="true">@(@"Exchange rates")</h3></div><div class="panel-body collapse in" aria-expanded="true">
@{ if(ViewData.ContainsKey("tableData_ExchangeVOther_table") && ((System.Data.DataTable)(ViewData["tableData_ExchangeVOther_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="0" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="ExchangeVOther_table" role="grid" aria-describedby="DataTables_Table_0_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_ExchangeVOther_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_ExchangeVOther_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_ExchangeVOther_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="modal" class="fa fa-sign-in" data-action="modal" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="ExchangeVOther_table" />
</div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExchangeRatesBody" aria-expanded="true">@(@"Transactions")</h3></div><div class="panel-body collapse in" aria-expanded="true">
@{ if(ViewData.ContainsKey("tableData_Transactions_table") && ((System.Data.DataTable)(ViewData["tableData_Transactions_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="1" data-dtinfo="1" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="1" id="Transactions_table" role="grid" aria-describedby="Transactions_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Transactions_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Transactions_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Transactions_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="flag" class="fa fa-flag" data-action="flag" data-idparam="modelId" data-confirm=""></i> <i title="annul" class="fa fa-remove" data-action="annul" data-idparam="modelId" data-confirm=""></i> <i title="find" class="fa fa-search" data-action="find" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Transactions_table" />
</div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExchangeRatesBody" aria-expanded="true">@(@"Support requests")</h3></div><div class="panel-body collapse in" aria-expanded="true">
@{ if(ViewData.ContainsKey("tableData_Support_request_table") && ((System.Data.DataTable)(ViewData["tableData_Support_request_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="1" data-dtinfo="1" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Support_request_table" role="grid" aria-describedby="Support_request_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Support_request_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Support_request_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Support_request_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="modal" class="fa fa-edit" data-action="modal" data-idparam="modelId" data-confirm=""></i> <i title="delete" class="fa fa-remove" data-action="delete" data-idparam="deleteId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Support_request_table" />
</div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExchangeRatesBody" aria-expanded="true">@(@"Profiles")</h3></div><div class="panel-body collapse in" aria-expanded="true">
@{ if(ViewData.ContainsKey("tableData_Profiles_table") && ((System.Data.DataTable)(ViewData["tableData_Profiles_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="1" data-dtinfo="1" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Profiles_table" role="grid" aria-describedby="Profiles_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Profiles_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Profiles_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Profiles_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="modal" class="fa fa-edit" data-action="modal" data-idparam="modelId" data-confirm=""></i> <i title="delete" class="fa fa-remove" data-action="delete" data-idparam="deleteId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Profiles_table" />
</div></div></div></div><div class="empty-element" id="modal_modal_profile"></div><form class="form-horizontal" method="post"><div class="modal fade" tabindex="-1" role="dialog" id="coldWallet" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><h4 class="modal-title">@(@"New Cold Wallet")</h4></div><div class="modal-body"><div class="form-group"><label for="" class="col-sm-3">@(@"Address")</label><div class="col-xs-12 col-sm-9"><input name="coldAddress" value="@(formState.ContainsKey("coldAddress") ? formState["coldAddress"] : (ViewData.ContainsKey("inputData_coldAddress") ? @ViewData["inputData_coldAddress"] : ""))" class="form-control" id="coldAddress" type="text" /></div></div><div class="form-group"><label for="" class="col-sm-3">@(@"Currency code")</label><div class="col-xs-12 col-sm-9">
<select name="ColdCurrencyCode" class="form-control" id="ColdCurrencyCode">
    
    @{ if(ViewData["dropdownData_ColdCurrencyCode"] != null) {
            foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_ColdCurrencyCode"])) {
                <option value="@(option.Key)" @((formState.ContainsKey("ColdCurrencyCode") && Convert.ToInt32(formState["ColdCurrencyCode"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_ColdCurrencyCode") && ViewData["dropdownSelection_ColdCurrencyCode"] is int && (int)ViewData["dropdownSelection_ColdCurrencyCode"] == option.Key) ? "selected" : "")>
                    @(option.Value)
                </option>
            }
        }
    }    
</select></div></div></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal" >@(@"Close")</button><button type="submit" class="btn btn-primary" name="button" value="addColdWallet" id="addColdWallet" >@(@"Add")</button></div></div></div></div><div class="modal fade modal-large" tabindex="-1" role="dialog" id="modalPair" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header" style="height: 35px"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="empty-element" id="exchange_heading"></div></div><div class="modal-body"><div class="row" id="preloader_pair"><div class="col-xs-12"><div class="" style="text-align:center; "><img src="/Content/Images/Icons/modalpreloader.gif" alt="" class="" style="padding:50px 0;"></img></div></div></div><div class="empty-element" id="exchange_body"></div></div></div></div></div><div class="modal fade modal-large" tabindex="-1" role="dialog" id="modalTicket" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header" style="height: 35px"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="empty-element" id="modal_name_ticket"></div></div><div class="modal-body"><div class="row" id="preloader_ticket"><div class="col-xs-12"><div class="" style="text-align:center; "><img src="/Content/Images/Icons/modalpreloader.gif" alt="" class="" style="padding:50px 0;"></img></div></div></div><div class="empty-element" id="modal_body_ticket"></div></div></div></div></div><div class="modal fade modal-large" tabindex="-1" role="dialog" id="modalProfile" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header" style="height: 35px"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="empty-element" id="modal_name_profile"></div></div><div class="modal-body" style="padding: 0px"><div class="row" id="preloader_profile"><div class="col-xs-12"><div class="" style="text-align:center; "><img src="/Content/Images/Icons/modalpreloader.gif" alt="" class="" style="padding:50px 0;"></img></div></div></div><div class="empty-element" id="modal_body_profile"></div><div class="empty-element" id="modal_body_cash"></div></div></div></div></div>@Html.AntiForgeryToken()</form><form class="form-horizontal" method="post"><div class="modal fade" tabindex="-1" role="dialog" id="hotWallet" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><h4 class="modal-title">@(@"New Hot Wallet")</h4></div><div class="modal-body"><div class="form-group"><label for="" class="col-sm-3">@(@"Address")</label><div class="col-xs-12 col-sm-9"><input name="hotAddress" value="@(formState.ContainsKey("hotAddress") ? formState["hotAddress"] : (ViewData.ContainsKey("inputData_hotAddress") ? @ViewData["inputData_hotAddress"] : ""))" class="form-control" id="hotAddress" type="text" /></div></div><div class="form-group"><label for="" class="col-sm-3">@(@"Currency code")</label><div class="col-xs-12 col-sm-9">
<select name="hotCurrencyCode" class="form-control" id="hotCurrencyCode">
    
    @{ if(ViewData["dropdownData_hotCurrencyCode"] != null) {
            foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_hotCurrencyCode"])) {
                <option value="@(option.Key)" @((formState.ContainsKey("hotCurrencyCode") && Convert.ToInt32(formState["hotCurrencyCode"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_hotCurrencyCode") && ViewData["dropdownSelection_hotCurrencyCode"] is int && (int)ViewData["dropdownSelection_hotCurrencyCode"] == option.Key) ? "selected" : "")>
                    @(option.Value)
                </option>
            }
        }
    }    
</select></div></div></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal" >@(@"Close")</button><button type="submit" class="btn btn-primary" name="button" value="addHotWallet" id="addHotWallet" >@(@"Add")</button></div></div></div></div>@Html.AntiForgeryToken()</form><form class="form-horizontal" method="post"><div class="modal fade mbe-active" tabindex="-1" role="dialog" id="bankaccountmodal" style="display: none; padding-right: 22px;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><h4 class="modal-title">@(@"New Bank Account")</h4></div><div class="modal-body"><div class="form-group"><label for="" class="col-sm-3">@(@"Account number")</label><div class="col-xs-12 col-sm-9"><input name="accountnumber" value="@(formState.ContainsKey("accountnumber") ? formState["accountnumber"] : (ViewData.ContainsKey("inputData_accountnumber") ? @ViewData["inputData_accountnumber"] : ""))" class="form-control" id="accountnumber" type="text" /></div></div><div class="form-group"><label for="" class="col-sm-3">@(@"Api Key")</label><div class="col-xs-12 col-sm-9"><input name="apikey" value="@(formState.ContainsKey("apikey") ? formState["apikey"] : (ViewData.ContainsKey("inputData_apikey") ? @ViewData["inputData_apikey"] : ""))" class="form-control" id="apikey" type="text" /></div></div><div class="form-group"><label for="" class="col-sm-3">@(@"Currency")</label><div class="col-xs-12 col-sm-9">
<select name="currency" class="form-control" id="currency">
    
    @{ if(ViewData["dropdownData_currency"] != null) {
            foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_currency"])) {
                <option value="@(option.Key)" @((formState.ContainsKey("currency") && Convert.ToInt32(formState["currency"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_currency") && ViewData["dropdownSelection_currency"] is int && (int)ViewData["dropdownSelection_currency"] == option.Key) ? "selected" : "")>
                    @(option.Value)
                </option>
            }
        }
    }    
</select></div></div></div><div class="modal-footer" style="margin-top: 10px;"><button type="button" class="btn btn-default" data-dismiss="modal" >@(@"Close")</button><button type="submit" class="btn btn-primary" name="button" value="add_button" id="add_button" >@(@"Add")</button></div></div></div></div>@Html.AntiForgeryToken()</form></div>