@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }@{ Dictionary<string, string> formState = (Dictionary<string, string>)ViewData["formState"]; }<div class="mozaicBootstrapPage"><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#RigUpDownHistoryGraphBody" aria-expanded="true">@(@"Exchange Balance")</h3></div><div class="panel-body collapse in" aria-expanded="true" style="overflow-x: auto;"><div class="row"><div class="col-xs-12"><p class="text-center" style="font-size: 50px;" id="total_balance">@(@"Total Balance: {var1} €".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("total_balance")).Value ?? "").ToString()))</p></div></div><div class="row">
@{ if(ViewData.ContainsKey("currency_foreach")) {
        foreach(var row in (IEnumerable<FSS.Omnius.Modules.Entitron.DB.DBItem>)ViewData["currency_foreach"]) {
            <div class="">
                <div class="col-xs-6 col-sm-4 col-md-3" style="margin: 15px 0; border-right: 2px solid black; min-height: 110px;"><img src="/Content/Images/Icons/@row["image_link"]" alt="" class="" style="margin-top: -5px;" height="25"></img><span class="" style="font-size: 16px;margin-left: 10px;">@(row["currency"].ToString())</span><span class="" style="font-size: 16px;">@(@" Balance")</span><p class="" style="font-size: 35px;" id="BTC_balance">@(row["ex_curr"].ToString())</p><span class="" style="font-size: 16px;" id="BTC_balance_diff">@(row["diff"].ToString())</span><span class="" style="font-size: 16px;">@(@" difference")</span></div>   
            </div>
        }
    }
}</div></div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading" role="button" aria-expanded="true" href="#minerStatusBody" data-toggle="collapse"><h3 class="panel-title">@(@"Cash Movement")</h3></div><div class="panel-body collapse in" aria-expanded="true" style="overflow-x: auto;"><div class="row"><div class="clearfix"><div class="col-xs-12 col-md-6"><h3 class="text-center" style="margin-top: 10px;">@(@"Transfers")</h3><div class="graphWrapper" id="transfers_highchart" style="height: 400px;">@Html.Raw(@"<div id=""transfers_highchart_graph""></div><script>transfers_highchart_graph_chart = new Highcharts.stockChart({
  rangeSelector: {
  	selected: $.cookie('transfers_highchart_graph_chart_selectedRange') || 0
  },
  chart: {
    renderTo: 'transfers_highchart_graph',
    events: {
      redraw: function() {
        $.cookie('transfers_highchart_graph_chart_selectedRange', this.rangeSelector.selected, { expires: 365 });
      }
    }
  },
  title: {
    text: ''
  },
  credits: {
    enabled: false
  },
  xAxis: {
    type: 'datetime',
    minPadding: 0,
    maxPadding: 0,
    lineColor: '#fff',
    lineWidth: 2,
    tickLength: 0,
    labels: {
      y: 15
    }
  },
  yAxis: {
    title: {
      text: ''
    },
    labels: {
      formatter: function () {
        var isNegative = this.value < 0 ? '-' : '';
        var absValue = Math.abs(this.value);
        return isNegative + '$' + this.axis.defaultLabelFormatter.call({
          axis: this.axis,
          value: absValue
        });
      },
      x: -5
    },
    opposite: true,
    minPadding: 0,
    maxPadding: 0,
    lineColor: '#fff',
    lineWidth: 2,
    tickLength: 0,
    gridLineColor: 'rgba(255,255,255,0.5)',
    gridZIndex: 4,
    min: 0
  },
  legend: {
    enabled: false
  },
  plotOptions: {
    area: {
      marker: {
        radius: 2,
        enabled: false
      },
      fillOpacity: 0.5,
      lineWidth: 1,
      states: {
        hover: {
          lineWidth: 1
        }
      },
      threshold: null
    }
  },
  series: [{
    type: 'area',
    name: 'Expected profit',
    zIndex: 3
  },{
    type: 'area',
    name: '',
    color: '#ff0000',
    fillOpacity: 0.75,
    zIndex: 1,
    tooltip: {
      pointFormat: ''
    }
  },{
    type: 'area',
    name: 'Real profit',
    color: Highcharts.theme.colors[2],
    fillOpacity: 1,
    zIndex: 2
  }],
  tooltip: {
    valuePrefix: '$'
  },
  data: {
    csv: '{var1}',
    complete: function(options) {
      console.log(options);
    }
  }
});

            </script>".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("transfers_highchart")).Value ?? "").ToString()))</div></div><div class="col-xs-12 col-md-6"><h3 class="text-center" style="margin-top: 10px;">@(@"Withdrawal requests")</h3>
@{ if(ViewData.ContainsKey("tableData_Withdrawal_request_table") && ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Withdrawal_request_table" role="grid" aria-describedby="DataTables_Table_0_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Withdrawal_request_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="Allow" class="fa fa-check-circle" data-action="Allow" data-idparam="modelId" data-confirm=""></i> <i title="Stop" class="fa fa-times-circle" data-action="Stop" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Withdrawal_request_table" />
</div></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><div class="clearfix"><h3 class="panel-title pull-left">@(@"Bank Accounts")</h3><form class="form-horizontal" method="post"><button type="submit" class="btn pull-right btn-primary btn-xs" name="button" value="newBankAccount" id="newBankAccount" data-toggle="modal" data-target="#bankaccountmodal" bankaccountmodal="bankaccountmodal" >@(@"AddBankAccount")</button>@Html.AntiForgeryToken()</form></div></div><div class="panel-body">
@{ if(ViewData.ContainsKey("tableData_bank_accounts_table") && ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="bank_accounts_table" role="grid" aria-describedby="DataTables_Table_0_info" style="margin-top: 44px;">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_bank_accounts_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="Delete" class="fa fa-remove" data-action="Delete" data-idparam="deleteId" data-confirm="Opravdu chcete daný účet smazat?"></i> <i title="Edit" class="fa fa-pencil" data-action="Edit" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="bank_accounts_table" />
</div></div></div><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><div class="clearfix"><div class="row"><div class="col-xs-7 col-lg-4 col-sm-6"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExpectationVSRealityBody" aria-expanded="true">@(@"Wallets")</h3></div><div class="col-xs-5 col-lg-8 col-sm-6"><button type="button" class="btn btn-primary btn-xs pull-right" name="button" value="addColdWallet" id="addColdWallet" data-toggle="modal" data-target="#coldWallet" >@(@"AddColdWallet")</button></div></div></div></div><div class="panel-body collapse in" aria-expanded="true"><div class="row"><div class="clearfix"><div class="col-xs-12 col-lg-4"><h3 class="text-center" style="margin-top: 10px;">@(@"Hot")</h3>
@{ if(ViewData.ContainsKey("tableData_Hot_wallets_table") && ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Hot_wallets_table" role="grid" aria-describedby="Hot_wallets_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Hot_wallets_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Hot_wallets_table" />
</div><div class="col-xs-12 col-lg-8"><h3 class="text-center" style="margin-top: 10px;">@(@"Cold")</h3>
@{ if(ViewData.ContainsKey("tableData_Cold_wallet_table") && ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Cold_wallet_table" role="grid" aria-describedby="Cold_wallet_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Cold_wallet_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="Delete" class="fa fa-remove" data-action="delete" data-idparam="deleteId" data-confirm="Opravdu chcete danou Cold Wallet smazat?"></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Cold_wallet_table" />
</div></div></div></div></div></div><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExchangeRatesBody" aria-expanded="true">@(@"Exchange rates")</h3></div><div class="panel-body collapse in" aria-expanded="true">
@{ if(ViewData.ContainsKey("tableData_ExchangeVOther_table") && ((System.Data.DataTable)(ViewData["tableData_ExchangeVOther_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="0" data-dtinfo="0" data-dtfilter="0" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="ExchangeVOther_table" role="grid" aria-describedby="DataTables_Table_0_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_ExchangeVOther_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_ExchangeVOther_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_ExchangeVOther_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="modal" class="fa fa-sign-in" data-action="modal" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="ExchangeVOther_table" />
</div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExchangeRatesBody" aria-expanded="true">@(@"Transactions")</h3></div><div class="panel-body collapse in" aria-expanded="true">
@{ if(ViewData.ContainsKey("tableData_Transactions_table") && ((System.Data.DataTable)(ViewData["tableData_Transactions_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="1" data-dtinfo="1" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="1" id="Transactions_table" role="grid" aria-describedby="Transactions_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Transactions_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Transactions_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Transactions_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="flag" class="fa fa-flag" data-action="flag" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Transactions_table" />
</div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExchangeRatesBody" aria-expanded="true">@(@"Profiles")</h3></div><div class="panel-body collapse in" aria-expanded="true"><div class="row"><div class="clearfix"><div class="col-xs-12 col-lg-4"><div class="row"><div class="graphWrapper" id="weekly_active_hc">@Html.Raw(@"<div id=""weekly_active_hc_graph""></div><script>weekly_active_hc_graph_chart = new Highcharts.chart({
  chart: {
    renderTo: 'weekly_active_hc_graph',
    backgroundColor: ""#fff"",
    type: 'pie',
    events: {
      render: function() {
        function getSize(chart, mod) {
          var box = this.getBBox(),
              radius = (Math.min(chart.plotWidth, chart.plotHeight)*0.35),
              scale = Math.min(radius/box.width, radius/box.height);
          return Math.floor(scale * mod * 10) + 'px';
        };
        
        if(typeof weekly_active_hc_graph_text != 'undefined' && weekly_active_hc_graph_text.element) {
          weekly_active_hc_graph_text.element.remove();
          weekly_active_hc_graph_text2.element.remove();
        }
		
        var rigAll = this.series[0].data[0].y+this.series[0].data[1].y;
        weekly_active_hc_graph_text = this.renderer.text(Math.round(this.series[0].data[0].y/rigAll*10000)/100 + "" %"").add();
        weekly_active_hc_graph_text.element.style.fill = '#444';
        weekly_active_hc_graph_text.element.style.fontSize = '10px';
        weekly_active_hc_graph_text.element.style.fontSize = getSize.apply(weekly_active_hc_graph_text, [this, 1.4]);

        var textBBox = weekly_active_hc_graph_text.element.getBBox();
        var x = this.plotLeft + (this.plotWidth  * 0.5) - (textBBox.width * 0.5);
        var y = this.plotTop  + (this.plotHeight * 0.5);
        weekly_active_hc_graph_text.attr({x: x, y: y});

        weekly_active_hc_graph_text2 = this.renderer.text('Weekly active').add();
        weekly_active_hc_graph_text2.element.style.fill = '#555';
        weekly_active_hc_graph_text2.element.style.fontSize = '7px';
        weekly_active_hc_graph_text2.element.style.fontSize = getSize.apply(weekly_active_hc_graph_text2, [this, 0.9]);

        var text2BBox = weekly_active_hc_graph_text2.element.getBBox();
        var x2 = this.plotLeft + (this.plotWidth * 0.5) - (text2BBox.width * 0.5);
        var y2 = this.plotTop + (this.plotHeight * 0.5) + (text2BBox.height * 1.1);
        weekly_active_hc_graph_text2.attr({x: x2, y: y2});
      }
    }
  },
  credits: {
    enabled: false
  },
  exporting: {
    enabled: false
  },
  title: {
    text: ''
  },
  plotOptions: {
    pie: {
      shadow: false,
      center: ['50%', '50%'],
      colors: [""#5cb85c"", ""#bcbfc4""],
      borderWidth: 0
    }
  },
  data: {
    csv: '{var1}'
  },
  series: [{
    name: 'Status',
    size: '100%',
    innerSize: '65%',
    dataLabels: {
      enabled: false
    }
  }]
});</script>".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("weekly_active_hc")).Value ?? "").ToString()))</div></div><div class="row"><div class="graphWrapper" id="monthly_active_hc">@Html.Raw(@"<div id=""monthly_active_hc_graph""></div><style type=""text/css"" rel=""stylesheet"">            </style><script>monthly_active_hc_graph_chart = new Highcharts.chart({
  chart: {
    renderTo: 'monthly_active_hc_graph',
    backgroundColor: ""#fff"",
    type: 'pie',
    events: {
      render: function() {
        function getSize(chart, mod) {
          var box = this.getBBox(),
              radius = (Math.min(chart.plotWidth, chart.plotHeight)*0.35),
              scale = Math.min(radius/box.width, radius/box.height);
          return Math.floor(scale * mod * 10) + 'px';
        };
        
        if(typeof monthly_active_hc_graph_text != 'undefined' && monthly_active_hc_graph_text.element) {
          monthly_active_hc_graph_text.element.remove();
          monthly_active_hc_graph_text2.element.remove();
        }
		
        var rigAll = this.series[0].data[0].y+this.series[0].data[1].y;
        monthly_active_hc_graph_text = this.renderer.text(Math.round(this.series[0].data[0].y/rigAll*10000)/100 + "" %"").add();
        monthly_active_hc_graph_text.element.style.fill = '#444';
        monthly_active_hc_graph_text.element.style.fontSize = '10px';
        monthly_active_hc_graph_text.element.style.fontSize = getSize.apply(monthly_active_hc_graph_text, [this, 1.4]);

        var textBBox = monthly_active_hc_graph_text.element.getBBox();
        var x = this.plotLeft + (this.plotWidth  * 0.5) - (textBBox.width * 0.5);
        var y = this.plotTop  + (this.plotHeight * 0.5);
        monthly_active_hc_graph_text.attr({x: x, y: y});

        monthly_active_hc_graph_text2 = this.renderer.text('Monthly active').add();
        monthly_active_hc_graph_text2.element.style.fill = '#555';
        monthly_active_hc_graph_text2.element.style.fontSize = '7px';
        monthly_active_hc_graph_text2.element.style.fontSize = getSize.apply(monthly_active_hc_graph_text2, [this, 0.9]);

        var text2BBox = monthly_active_hc_graph_text2.element.getBBox();
        var x2 = this.plotLeft + (this.plotWidth * 0.5) - (text2BBox.width * 0.5);
        var y2 = this.plotTop + (this.plotHeight * 0.5) + (text2BBox.height * 1.1);
        monthly_active_hc_graph_text2.attr({x: x2, y: y2});
      }
    }
  },
  credits: {
    enabled: false
  },
  exporting: {
    enabled: false
  },
  title: {
    text: ''
  },
  plotOptions: {
    pie: {
      shadow: false,
      center: ['50%', '50%'],
      colors: [""#5cb85c"", ""#bcbfc4""],
      borderWidth: 0
    }
  },
  data: {
    csv: '{var1}'
  },
  series: [{
    name: 'Status',
    size: '100%',
    innerSize: '65%',
    dataLabels: {
      enabled: false
    }
  }]
});</script>".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("monthly_active_hc")).Value ?? "").ToString()))</div></div><div class=""><span class="" id="noactionUsers" style="font-size: 25px;">@(@"Noaction users: {var1}".Replace("{var1}", (ViewData.FirstOrDefault(v => v.Key.EndsWith("noactionUsers")).Value ?? "").ToString()))</span></div></div><div class="col-xs-12 col-lg-8">
@{ if(ViewData.ContainsKey("tableData_Profiles_table") && ((System.Data.DataTable)(ViewData["tableData_Profiles_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="1" data-dtinfo="1" data-dtfilter="0" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="Profiles_table" role="grid" aria-describedby="Profiles_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Profiles_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_Profiles_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_Profiles_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="modal" class="fa fa-edit" data-action="modal" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="Profiles_table" />
</div></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><div class="panel panel-default" ><div class="panel-heading"><div class="clearfix"><div class="row"><div class="col-xs-7 col-lg-4 col-sm-6"><h3 class="panel-title" role="button" data-toggle="collapse" href="#ExpectationVSRealityBody" aria-expanded="true">@(@"Deposits and withdrawals")</h3></div></div></div></div><div class="panel-body collapse in" aria-expanded="true"><div class=""><ul class="nav nav-tabs"><li class="active"><a href="#tab-deposit" data-toggle="tab" class="" aria-expanded="true">@(@"Deposits")</a></li><li class=""><a href="#tab-withdraw" data-toggle="tab" aria-expanded="false" class="">@(@"Withdrawals")</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-deposit"><div class="col-xs-12"><h3 class="text-center" style="margin-top: 10px;">@(@"Deposits")</h3>
@{ if(ViewData.ContainsKey("tableData_deposits_table") && ((System.Data.DataTable)(ViewData["tableData_deposits_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="1" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="deposits_table" role="grid" aria-describedby="Hot_wallets_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_deposits_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_deposits_table"])).Columns) {
                <th>@col.Caption</th>
            }
                
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_deposits_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="deposits_table" />
</div></div><div class="tab-pane" id="tab-withdraw"><div class="col-xs-12"><h3 class="text-center" style="margin-top: 10px;">@(@"Withdrawals")</h3>
@{ if(ViewData.ContainsKey("tableData_withdrawals_table") && ((System.Data.DataTable)(ViewData["tableData_withdrawals_table"])).Rows.Count > 0) {
    <table class="table data-table no-footer dataTable" data-dtpaging="1" data-dtinfo="0" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="1" data-dtserverside="0" id="withdrawals_table" role="grid" aria-describedby="withdrawals_table_info" style="">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_withdrawals_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_withdrawals_table"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_withdrawals_table"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="withdrawals_table" />
</div></div></div></div></div></div></div></div><div class="empty-element" id="modal_modal_profile"></div><form class="form-horizontal" method="post"><div class="modal fade" tabindex="-1" role="dialog" id="coldWallet" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><h4 class="modal-title">@(@"New Cold Wallet")</h4></div><div class="modal-body"><div class="form-group"><label for="" class="col-sm-3">@(@"Address")</label><div class="col-xs-12 col-sm-9"><input name="coldAddress" value="@(formState.ContainsKey("coldAddress") ? formState["coldAddress"] : (ViewData.ContainsKey("inputData_coldAddress") ? @ViewData["inputData_coldAddress"] : ""))" class="form-control" id="coldAddress" type="text" /></div></div><div class="form-group"><label for="" class="col-sm-3">@(@"Currency code")</label><div class="col-xs-12 col-sm-9">
<select name="ColdCurrencyCode" class="form-control" id="ColdCurrencyCode">
    
    @{ if(ViewData["dropdownData_ColdCurrencyCode"] != null) {
            foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_ColdCurrencyCode"])) {
                <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_ColdCurrencyCode") && (string)ViewData["dropdownSelection_ColdCurrencyCode"] == option.Key.ToString() ? "selected" : "")>
                    @(option.Value)
                </option>
            }
        }
    }    
</select></div></div></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal" >@(@"Close")</button><button type="submit" class="btn btn-primary" name="button" value="addColdWallet" id="addColdWallet" >@(@"Add")</button></div></div></div></div><div class="modal fade modal-large" tabindex="-1" role="dialog" id="modalPair" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="empty-element" id="exchange_heading"></div></div><div class="modal-body"><div class="row" id="preloader_pair"><div class="col-xs-12"><div class="" style="text-align:center; "><img src="/Content/Images/Icons/modalpreloader.gif" alt="" class="" style="padding:50px 0;"></img></div></div></div><div class="empty-element" id="exchange_body"></div></div></div></div></div><div class="modal fade modal-large" tabindex="-1" role="dialog" id="modalTicket" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header" style="height: 35px"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="empty-element" id="modal_name_ticket"></div></div><div class="modal-body"><div class="row" id="preloader_ticket"><div class="col-xs-12"><div class="" style="text-align:center; "><img src="/Content/Images/Icons/modalpreloader.gif" alt="" class="" style="padding:50px 0;"></img></div></div></div><div class="empty-element" id="modal_body_ticket"></div></div></div></div></div><div class="modal fade modal-large" tabindex="-1" role="dialog" id="modalProfile" style="display: none;"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header" style="height: 35px"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="empty-element" id="modal_name_profile"></div></div><div class="modal-body" style="padding: 0px"><div class="row" id="preloader_profile"><div class="col-xs-12"><div class="" style="text-align:center; "><img src="/Content/Images/Icons/modalpreloader.gif" alt="" class="" style="padding:50px 0;"></img></div></div></div><div class="empty-element" id="modal_body_profile"></div><div class="empty-element" id="modal_body_cash"></div></div></div></div></div>@Html.AntiForgeryToken()</form></div><script type="text/javascript" src="/Scripts/UserScripts/Application/Xmu/ajax.js"></script>