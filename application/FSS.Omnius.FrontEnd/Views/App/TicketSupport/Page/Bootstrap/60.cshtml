@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }@{ Dictionary<string, string> formState = (Dictionary<string, string>)ViewData["formState"]; }<div class="mozaicBootstrapPage"><div class="container"><div class="row"><div class="col-xs-12"><h1 class="">@(@"Create ticket")</h1><div class="panel panel-default" ><div class="panel-body"><div class="row"><div class="col-xs-12"><form class="form-horizontal" method="post"><div class="form-group"><label for="inputName" class="col-sm-2 col-xs-12">@(@"Name")</label><div class="col-xs-12 col-sm-10"><input type="text" name="inputName" value="@(formState.ContainsKey("inputName") ? formState["inputName"] : (ViewData.ContainsKey("inputData_inputName") ? @ViewData["inputData_inputName"] : ""))" class="form-control input-sm" id="inputName" required="required" /></div></div><div class="form-group"><label for="inputDescription" class="col-xs-12 col-sm-2">@(@"Decription")</label><div class="col-xs-12 col-sm-10"><textarea class="form-control empty-element" name="inputDescription" value="" id="inputDescription" required="required">@(formState.ContainsKey("inputDescription") ? formState["inputDescription"] : ViewData["inputData_inputDescription"])</textarea></div></div><div class="form-group"><label for="" class="col-sm-2">@(@"Category")</label><div class="col-xs-12 col-sm-10">
<select name="category_dropdown" class="form-control mbe-active" id="category_dropdown" required="required">
    
    @{ if(ViewData["dropdownData_category_dropdown"] != null) {
            foreach(var option in ((Dictionary<int, string>)ViewData["dropdownData_category_dropdown"])) {
                <option value="@(option.Key)" @((formState.ContainsKey("category_dropdown") && Convert.ToInt32(formState["category_dropdown"]) == option.Key) || (ViewData.ContainsKey("dropdownSelection_category_dropdown") && ViewData["dropdownSelection_category_dropdown"] is int && (int)ViewData["dropdownSelection_category_dropdown"] == option.Key) ? "selected" : "")>
                    @(option.Value)
                </option>
            }
        }
    }    
</select></div></div><button type="submit" class="btn btn-primary" name="button" value="buttonSubmit" id="buttonSubmit" >@(@"Submit")</button>@Html.AntiForgeryToken()</form></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><h1 class="">@(@"My tickets")</h1><div class="panel panel-default" ><div class="panel-body"><div class=""><ul class="nav nav-tabs"><li class="active"><a href="#tabProgress" data-toggle="tab" class="" aria-expanded="true">@(@"In progress")</a></li><li class=""><a href="#tabCompleted" data-toggle="tab" aria-expanded="false" class="">@(@"Completed")</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tabProgress">
@{ if(ViewData.ContainsKey("tableData_dataTableProgress") && ((System.Data.DataTable)(ViewData["tableData_dataTableProgress"])).Rows.Count > 0) {
    <table class="table data-table dataTable no-footer" data-dtpaging="1" data-dtinfo="1" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="0" data-dtserverside="0" id="dataTableProgress" role="grid" aria-describedby="dataTableProgress_info">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_dataTableProgress"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_dataTableProgress"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_dataTableProgress"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="View" class="fa fa-eye" data-action="viewProgress" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="dataTableProgress" />
</div><div class="tab-pane" id="tabCompleted">
@{ if(ViewData.ContainsKey("tableData_dataTableCompleted") && ((System.Data.DataTable)(ViewData["tableData_dataTableCompleted"])).Rows.Count > 0) {
    <table class="table data-table dataTable no-footer" data-dtpaging="1" data-dtinfo="1" data-dtfilter="1" data-dtordering="1" data-dtcolumnfilter="0" data-dtserverside="0" id="dataTableCompleted" role="grid" aria-describedby="dataTableCompleted_info">
        <thead>
            <tr>
            @foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_dataTableCompleted"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </thead>
        <tfoot>
            <tr>@foreach (System.Data.DataColumn col in ((System.Data.DataTable)(ViewData["tableData_dataTableCompleted"])).Columns) {
                <th>@col.Caption</th>
            }
                <th>Akce</th>
            </tr>
        </tfoot>
        <tbody>
        @foreach(System.Data.DataRow row in ((System.Data.DataTable)(ViewData["tableData_dataTableCompleted"])).Rows) {
            <tr>@foreach (var cell in row.ItemArray) {
                <td>@cell.ToString()</td>
            }
                <td class="actionIcons"><i title="View" class="fa fa-eye" data-action="viewCompleted" data-idparam="modelId" data-confirm=""></i></td>
            </tr>
        }
        </tbody>
    </table>
} else {
    <div class="alert alert-info empty-table-label">Tabulka neobsahuje žádná data</div>
} }
<input type="hidden" name="dataTableCompleted" />
</div></div></div></div></div></div></div></div></div>