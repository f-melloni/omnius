@using FSS.Omnius.FrontEnd.Utils@{T t = new T( (string)ViewData["locale"] );}@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }<form class="mozaicForm" method="post" enctype = "multipart/form-data"><div id="uic_panel0" name="panel0"  class="uic panel-component named-panel"  style="left: 20px; top: 79px; width: 498px; height: 199px;  "><div class="named-panel-header">@(t._("Změnit společnost"))</div><div id="uic_label2" name="label2"  class="uic control-label" contentTemplate="" style="left: 30.1334px; top: 46.1333px; width: 77px; height: 20px; ">@Html.Raw(ViewData.ContainsKey("inputData_label2") ? "Uživatel".Replace("{var1}", (ViewData["inputData_label2"] ?? "").ToString()) : t._("Uživatel") )</div><div id="uic_label3" name="label3"  class="uic control-label" contentTemplate="" style="left: 23.4px; top: 88.3937px; width: 77px; height: 28px; ">@Html.Raw(ViewData.ContainsKey("inputData_label3") ? "Společnost".Replace("{var1}", (ViewData["inputData_label3"] ?? "").ToString()) : t._("Společnost") )</div><select id="uic_dropdown_company" name="dropdown_company" tabindex=""  class="uic dropdown-select" style="left: 239.456px; top: 84.4625px; width: 240px; height: 30px; ">@{ if(ViewData["dropdownData_dropdown_company"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_dropdown_company"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_dropdown_company") && ViewData["dropdownSelection_dropdown_company"] is int && (int)ViewData["dropdownSelection_dropdown_company"] == option.Key ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_dropdown_user" name="dropdown_user" tabindex=""  class="uic dropdown-select" style="left: 241.317px; top: 41.3167px; width: 240px; height: 26px; ">@{ if(ViewData["dropdownData_dropdown_user"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_dropdown_user"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_dropdown_user") && ViewData["dropdownSelection_dropdown_user"] is int && (int)ViewData["dropdownSelection_dropdown_user"] == option.Key ? "selected" : "") >@(t._(option.Value))</option>}; } }</select></div><button id="uic_button_save" name="button" value="button_save"  class="uic button-simple button-large" buttonName="button_save" tabindex="" style="left: 292px; top: 218.963px; width: 205px; height: 30px;  ">@(t._("Uložit"))</button><button id="uic_button_backtolist" name="button" value="button_backtolist" ignoredonvalidation class="uic button-simple button-large" buttonName="button_backtolist" tabindex="" style="left: 32.9938px; top: 218.95px; width: 192px; height: 35px;  ">@(t._("Zpět na seznam"))</button><div id="uic_breadcrump48" name="breadcrump48" class="uic breadcrumb-navigation breadcrumb-navigation" style="left: 20px; top: 20px; width: 498px; height: 52px; "><div class="app-icon fa @ViewData["appIcon"]"></div><div class="nav-text">@(t._(ViewData["appName"].ToString())) &gt; @(t._(ViewData["pageName"].ToString()))</div></div><input type="hidden" name="registry" value="@ViewData["crossBlockRegistry"]" />@Html.AntiForgeryToken()</form>