@using FSS.Omnius.FrontEnd.Utils@{T t = new T( (string)ViewData["locale"] );}@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }<form class="mozaicForm" method="post" enctype = "multipart/form-data"><div id="uic_recommendation_formulation_panel" name="recommendation_formulation_panel"  class="uic panel-component named-panel"  style="left: 20px; top: 20px; width: 900px; height: 350px;  "><div class="named-panel-header">@(t._("Formulace doporučení"))</div><div id="uic_label0" name="label0"  class="uic control-label" contentTemplate="" style="left: 20px; top: 60px; width: 77px; height: 22px; ">@Html.Raw(ViewData.ContainsKey("inputData_label0") ? "Odpovědná osoba".Replace("{var1}", (ViewData["inputData_label0"] ?? "").ToString()) : "Odpovědná osoba" )</div><div id="uic_label1" name="label1"  class="uic control-label" contentTemplate="" style="left: 20px; top: 100px; width: 77px; height: 22px; ">@Html.Raw(ViewData.ContainsKey("inputData_label1") ? "Doporučení".Replace("{var1}", (ViewData["inputData_label1"] ?? "").ToString()) : "Doporučení" )</div><div id="uic_label2" name="label2"  class="uic control-label" contentTemplate="" style="left: 20px; top: 200px; width: 77px; height: 22px; ">@Html.Raw(ViewData.ContainsKey("inputData_label2") ? "Nadřazené doporučení".Replace("{var1}", (ViewData["inputData_label2"] ?? "").ToString()) : "Nadřazené doporučení" )</div><div id="uic_label3" name="label3"  class="uic control-label" contentTemplate="" style="left: 480px; top: 100px; width: 77px; height: 22px; ">@Html.Raw(ViewData.ContainsKey("inputData_label3") ? "Doporučení EN".Replace("{var1}", (ViewData["inputData_label3"] ?? "").ToString()) : "Doporučení EN" )</div><textarea id="uic_recommendation_multiline" name="recommendation_multiline"  placeholder="@(t._(""))" tabindex="" class="uic input-multiline" style="left: 180px; top: 100px; width: 260px; height: 75px; ">@ViewData["inputData_recommendation_multiline"]</textarea><textarea id="uic_recommendation_en_multiline" name="recommendation_en_multiline"  placeholder="@(t._(""))" tabindex="" class="uic input-multiline" style="left: 600px; top: 100px; width: 260px; height: 75px; ">@ViewData["inputData_recommendation_en_multiline"]</textarea><select id="uic_responsible_dropdown" name="responsible_dropdown" tabindex=""  class="uic dropdown-select" style="left: 180px; top: 60px; width: 260px; height: 20px; ">@{ if(ViewData["dropdownData_responsible_dropdown"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_responsible_dropdown"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_responsible_dropdown") && ViewData["dropdownSelection_responsible_dropdown"] is int && (int)ViewData["dropdownSelection_responsible_dropdown"] == option.Key ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><select id="uic_dropdown-select7" name="dropdown-select7" tabindex=""  class="uic dropdown-select" style="left: 180px; top: 200px; width: 260px; height: 20px; ">@{ if(ViewData["dropdownData_dropdown-select7"] != null) { foreach(var option in (Dictionary<int, string>)ViewData["dropdownData_dropdown-select7"]){ <option value="@(option.Key)" @(ViewData.ContainsKey("dropdownSelection_dropdown-select7") && ViewData["dropdownSelection_dropdown-select7"] is int && (int)ViewData["dropdownSelection_dropdown-select7"] == option.Key ? "selected" : "") >@(t._(option.Value))</option>}; } }</select><button id="uic_save_without_notifying_button" name="button" value="save_without_notifying_button"  class="uic button-simple button-large" buttonName="save_without_notifying_button" tabindex="" style="left: 460px; top: 280px; width: 400px; height: 31px;  ">@(t._("Uložit bez odeslání odpovědné osobě"))</button></div><input type="hidden" name="registry" value="@ViewData["crossBlockRegistry"]" />@Html.AntiForgeryToken()</form>