@{ Layout = "~/Views/Shared/_OmniusUserAppLayout.cshtml"; }@{ Dictionary<string, string> formState = (Dictionary<string, string>)ViewData["formState"]; }<div class="mozaicBootstrapPage"><div class="container"><h1 class="">@(@"Calendar")</h1><div class="event-calendar empty-element" id="Cal" style="min-height:500px"></div>@section scripts {
<script>var CalJsonData = @Html.Raw((ViewData.FirstOrDefault(v => v.Key.EndsWith("Cal")).Value ?? new Newtonsoft.Json.Linq.JArray()).ToString());</script><script>var CalOptions = {
    sectionsList: ['Header', 'Calendar', 'EventList', 'FilterBar'],
    eventTooltipContent: 'Default',
    duration: 'Default',
    durationStrings: BootstrapUserInit.EventCalendar.DEFAULT_DURATION_STRINGS,
    viewsToDisplay: [{
        viewName: 'DetailedMonthView',
        viewDisplayName: 'Month'
    }, {
        viewName: 'WeekView',
        viewDisplayName: 'Week'
    }, {
        viewName: 'DayView',
        viewDisplayName: 'Day'
    }],
    visibleView: 'DetailedMonthView',
    selectedDate: new Date(),
    headerComponents: BootstrapUserInit.EventCalendar.DEFAULT_HEADER_COMPONENTS,
    headerSectionsList: {
        left: ['DatePickerIcon', 'TodayButton'],
        center: ['PreviousButton', 'HeaderLabel', 'NextButton'],
        right: ['MenuSegmentedTab']
    },
    dropdownMenuElements: ['ViewsToDisplay'],
    formatSeparatorDateTime: ' ',
    formatSeparatorDate: '-',
    formatSeparatorTime: ':',
    inputDateTimeFormat: 'yyyy-dd-MM HH:mm:ss',
    calDataSource: [{
        sourceFetchType: 'ALL',
        sourceType: 'JSON',
        source: {
            eventSource: window['CalJsonData']
        }
    }],
    eventDuration: 30,
    allDayEventDuration: 1,
    timeIndicatorUpdationInterval: 15,
    unitTimeInterval: 30,
    timeLabels: 'Hour',
    inputTZOffset: '+00:00',
    tz: 'Europe/Prague',
    outputTZOffset: '+00:00',
    weekStartDay: 1,
    weekNumCalculation: 'Europe/ISO',
    daysInCustomView: 4,
    daysInDayListView: 7,
    daysInAppointmentView: 4,
    agendaViewDuration: 'Month',
    daysInAgendaView: 15,
    agendaViewTheme: 'Timeline1',
    quickAgendaViewDuration: 'Week',
    daysInQuickAgendaView: 5,
    taskPlannerViewDuration: 'Week',
    daysInTaskPlannerView: 5,
    transitionSpeed: 600,
    actionOnDayClickInMonthView: 'ModifyEventList',
    eventIndicatorInMonthView: 'Events',
    eventIndicatorInDatePicker: 'DayNumberBold',
    eventIndicatorInDayListView: 'DayHighlight',
    averageEventsPerDayForDayHighlightView: 5,
    hiddenEventsIndicatorLabel: '+(count) more',
    hiddenEventsIndicatorAction: 'ShowEventDialog',
    is24Hour: true,
    showDaysWithNoEventsInAgendaView: false,
    fixedHeightOfWeekPlannerViewCells: false,
    fixedHeightOfTaskPlannerView: true,
    showTransition: true,
    fixedNumOfWeeksInMonthView: false,
    displayWeekNumInMonthView: false,
    hideExtraEvents: true,
    addEventsInMonthView: true,
    displayEventsInMonthView: true,
    isDragNDropInMonthView: false,
    isTooltipInMonthView: true,
    isDragNDropInDetailView: false,
    isResizeInDetailView: false,
    isTooltipInDetailView: true,
    isDragNDropInQuickAgendaView: false,
    isTooltipInQuickAgendaView: true,
    isDragNDropInTaskPlannerView: false,
    isTooltipInTaskPlannerView: true,
    isTooltipInAppointmentView: true,
    changeCalendarBorderColorInJS: false,
    deleteOldDataWhileNavigating: false,
    onlyTextForNonAllDayEvents: true,
    excludeNonBusinessHours: false,
    isNonBusinessHoursDroppable: false,
    isRestrictedSectionDroppable: false,
    actionBarHeight: 30,
    filterBarPosition: 'Left',
    filterBarHeight: 200,
    filterBarWidth: 200,
    eventFilterCriteria: [{
        keyName: 'calendarId',
        keyDisplayName: 'Calendars',
        dataType: 'String',
        selectedValues: ['work', 'personal'],
        values: ['work', 'personal']
    }],
    noneSelectedFilterAction: 'SelectAll',
    calendarBorderColor: 'FFFFFF',
    extraMonthsForDataLoading: 1,
    datasetModificationRule: 'Default',
    changeColorBasedOn: 'EventCalendar',
    borderColor: '',
    textColor: 'FFFFFF',
    eventColorsArray: ['C0392B', 'D2527F', '674172', '4183D7', '336E7B', '36D7B7', '68C3A3', 'E87E04', '6C7A89', 'F9690E'],
    eventIcon: 'cs-icon-Event',
    hideEventIcon: {
        Default: false,
        DetailedMonthView: false,
        MonthView: false,
        WeekView: false,
        DayView: false,
        CustomView: false,
        QuickAgendaView: false,
        TaskPlannerView: false,
        DayEventDetailView: false,
        AgendaView: false,
        WeekPlannerView: false
    },
    hideEventTime: {
        Default: false,
        DetailedMonthView: false,
        MonthView: false,
        WeekView: false,
        DayView: false,
        CustomView: false,
        QuickAgendaView: false,
        TaskPlannerView: false,
        DayEventDetailView: false,
        AgendaView: false,
        WeekPlannerView: false
    },
    businessHoursSource: [
        { day: 0, times: [{ startTime: '00:00', endTime: '24:00' }] },
        { day: 1, times: [{ startTime: '00:00', endTime: '24:00' }] },
        { day: 2, times: [{ startTime: '00:00', endTime: '24:00' }] },
        { day: 3, times: [{ startTime: '10:00', endTime: '24:00' }] },
        { day: 4, times: [{ startTime: '00:00', endTime: '24:00' }] },
        { day: 5, times: [{ startTime: '10:00', endTime: '24:00' }] },
        { day: 6, times: [{ startTime: '00:00', endTime: '24:00' }] }
    ],
    eventOrTaskStatusIndicators: [
        { name: 'Overdue', color: 'E74C3C' },
        { name: 'Completed', color: '27AE60' },
        { name: 'InProgress', color: 'F1C40F' }
    ],
    adjustViewOnWindowResize: true,
    useHammerjsAsGestureLibrary: false,

    // CALLBACKS
    initialize: null,
    modifyHeaderViewLabels: null,
    addEventHandlersInHeader: null,
    dataLoadingStart: null,
    dataLoadingEnd: null,
    cellClicked: null,
    viewLoaded: null,
    previousButtonClicked: null,
    nextButtonClicked: null,
    todayButtonClicked: null,
    visibleViewChanged: null,
    modifyCustomView: null,
    displayEventListDialog: null,
    eventInADialogClicked: null,
    displayEventsForPeriodInListInAgendaView: null,
    eventRendered: null,
    eventsAddedInView: null,
    timeSlotsAddedInView: null,
    timeSlotClicked: null,
    saveChangesOnEventDrop: null,
    saveChangesOnEventResize: null,
    modifyActionBarView: null,
    addDaySummaryInTaskPlannerView: null,
    displayEventsForPeriodInList: BootstrapUserInit.EventCalendar.displayEventsForPeriodInList,
    eventListAppended: BootstrapUserInit.EventCalendar.adjustList,
    slotTooltipContent: BootstrapUserInit.EventCalendar.getSlotTooltipContent,
    eventClicked: BootstrapUserInit.EventCalendar.defaultEventDetail,
    modifyFilterBarView: BootstrapUserInit.EventCalendar.renderFilters
};</script>
}</div></div>